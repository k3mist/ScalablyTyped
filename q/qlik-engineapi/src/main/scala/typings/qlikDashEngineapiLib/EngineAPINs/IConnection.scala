package typings
package qlikDashEngineapiLib.EngineAPINs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Connection...
  */
trait IConnection extends js.Object {
  /**
    * One of:
    *
    *   - ODBC CONNECT TO [<provider name>]
    *   - OLEDB CONNECT TO [<provider name>]
    *   - CUSTOM CONNECT TO [<provider name>]
    *   - "<local absolute or relative path,UNC path >"
    *   - "<URL>"
    *
    * Connection string.
    * This parameter is mandatory and must be set when creating or modifying a connection.
    */
  var qConnectionString: java.lang.String
  /**
    * Identifier of the connection.
    * Is generated by the engine and is unique.
    */
  var qId: java.lang.String
  /**
    * Select which user credentials to use to connect to the source.
    *
    * - LOG_ON_SERVICE_USER: Disables
    * - LOG_ON_CURRENT_USER: Enables
    */
  var qLogOn: LogonType
  /**
    * Information about the connection.
    */
  var qMeta: INxMeta
  /**
    * Is generated by the engine.
    * Creation date of the connection or last modification date of the connection.
    */
  var qModifiedDate: java.lang.String
  /**
    * Name of the connection.
    * This parameter is mandatory and must be set when creating or modifying a connection.
    */
  var qName: java.lang.String
  /**
    * Password of the user who creates the connection.
    * This parameter is optional; it is only used for OLEDB, ODBC and CUSTOM connections.
    * A call to GetConnection method does not return the password.
    */
  var qPassword: js.UndefOr[java.lang.String] = js.undefined
  /**
    * One of:
    *          - ODBC
    *          - OLEDB
    *          - <Name of the custom connection file>
    *          - folder
    *          - internet
    *
    * Type of the connection.
    * This parameter is mandatory and must be set when creating or modifying a connection.
    * For ODBC, OLEDB and custom connections, the engine checks that the connection type matches the connection string.
    * >> The type is not case sensitive.
    */
  var qType: java.lang.String
  /**
    * Name of the user who creates the connection.
    * This parameter is optional; it is only used for OLEDB, ODBC and CUSTOM connections.
    * A call to GetConnection method does not return the user name.
    */
  var qUserName: js.UndefOr[java.lang.String] = js.undefined
}

object IConnection {
  @scala.inline
  def apply(
    qConnectionString: java.lang.String,
    qId: java.lang.String,
    qLogOn: LogonType,
    qMeta: INxMeta,
    qModifiedDate: java.lang.String,
    qName: java.lang.String,
    qType: java.lang.String,
    qPassword: java.lang.String = null,
    qUserName: java.lang.String = null
  ): IConnection = {
    val __obj = js.Dynamic.literal(qConnectionString = qConnectionString, qId = qId, qLogOn = qLogOn, qMeta = qMeta, qModifiedDate = qModifiedDate, qName = qName, qType = qType)
    if (qPassword != null) __obj.updateDynamic("qPassword")(qPassword)
    if (qUserName != null) __obj.updateDynamic("qUserName")(qUserName)
    __obj.asInstanceOf[IConnection]
  }
}

