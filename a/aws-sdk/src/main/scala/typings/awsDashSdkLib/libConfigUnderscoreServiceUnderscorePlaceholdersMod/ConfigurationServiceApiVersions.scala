package typings
package awsDashSdkLib.libConfigUnderscoreServiceUnderscorePlaceholdersMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait ConfigurationServiceApiVersions extends js.Object {
  var acm: js.UndefOr[awsDashSdkLib.clientsAcmMod.ACMNs.apiVersion] = js.undefined
  var acmpca: js.UndefOr[awsDashSdkLib.clientsAcmpcaMod.ACMPCANs.apiVersion] = js.undefined
  var alexaforbusiness: js.UndefOr[awsDashSdkLib.clientsAlexaforbusinessMod.AlexaForBusinessNs.apiVersion] = js.undefined
  var amplify: js.UndefOr[awsDashSdkLib.clientsAmplifyMod.AmplifyNs.apiVersion] = js.undefined
  var apigateway: js.UndefOr[awsDashSdkLib.clientsApigatewayMod.APIGatewayNs.apiVersion] = js.undefined
  var apigatewaymanagementapi: js.UndefOr[
    awsDashSdkLib.clientsApigatewaymanagementapiMod.ApiGatewayManagementApiNs.apiVersion
  ] = js.undefined
  var apigatewayv2: js.UndefOr[awsDashSdkLib.clientsApigatewayv2Mod.ApiGatewayV2Ns.apiVersion] = js.undefined
  var applicationautoscaling: js.UndefOr[
    awsDashSdkLib.clientsApplicationautoscalingMod.ApplicationAutoScalingNs.apiVersion
  ] = js.undefined
  var appmesh: js.UndefOr[awsDashSdkLib.clientsAppmeshMod.AppMeshNs.apiVersion] = js.undefined
  var appstream: js.UndefOr[awsDashSdkLib.clientsAppstreamMod.AppStreamNs.apiVersion] = js.undefined
  var appsync: js.UndefOr[awsDashSdkLib.clientsAppsyncMod.AppSyncNs.apiVersion] = js.undefined
  var athena: js.UndefOr[awsDashSdkLib.clientsAthenaMod.AthenaNs.apiVersion] = js.undefined
  var autoscaling: js.UndefOr[awsDashSdkLib.clientsAutoscalingMod.AutoScalingNs.apiVersion] = js.undefined
  var autoscalingplans: js.UndefOr[awsDashSdkLib.clientsAutoscalingplansMod.AutoScalingPlansNs.apiVersion] = js.undefined
  var backup: js.UndefOr[awsDashSdkLib.clientsBackupMod.BackupNs.apiVersion] = js.undefined
  var batch: js.UndefOr[awsDashSdkLib.clientsBatchMod.BatchNs.apiVersion] = js.undefined
  var budgets: /* import warning: QualifyReferences.resolveTypeRef many Couldn't qualify AWS.Budgets.Types.apiVersion */ js.UndefOr[
    /* import warning: QualifyReferences.resolveTypeRef many Couldn't qualify AWS.Budgets.Types.apiVersion */ js.Any
  ] = js.undefined
  var chime: js.UndefOr[awsDashSdkLib.clientsChimeMod.ChimeNs.apiVersion] = js.undefined
  var cloud9: js.UndefOr[awsDashSdkLib.clientsCloud9Mod.Cloud9Ns.apiVersion] = js.undefined
  var clouddirectory: js.UndefOr[awsDashSdkLib.clientsClouddirectoryMod.CloudDirectoryNs.apiVersion] = js.undefined
  var cloudformation: js.UndefOr[awsDashSdkLib.clientsCloudformationMod.CloudFormationNs.apiVersion] = js.undefined
  var cloudfront: js.UndefOr[awsDashSdkLib.clientsCloudfrontMod.CloudFrontNs.apiVersion] = js.undefined
  var cloudhsm: js.UndefOr[awsDashSdkLib.clientsCloudhsmMod.CloudHSMNs.apiVersion] = js.undefined
  var cloudhsmv2: js.UndefOr[awsDashSdkLib.clientsCloudhsmv2Mod.CloudHSMV2Ns.apiVersion] = js.undefined
  var cloudsearch: js.UndefOr[awsDashSdkLib.clientsCloudsearchMod.CloudSearchNs.apiVersion] = js.undefined
  var cloudsearchdomain: js.UndefOr[awsDashSdkLib.clientsCloudsearchdomainMod.CloudSearchDomainNs.apiVersion] = js.undefined
  var cloudtrail: js.UndefOr[awsDashSdkLib.clientsCloudtrailMod.CloudTrailNs.apiVersion] = js.undefined
  var cloudwatch: js.UndefOr[awsDashSdkLib.clientsCloudwatchMod.CloudWatchNs.apiVersion] = js.undefined
  var cloudwatchevents: js.UndefOr[awsDashSdkLib.clientsCloudwatcheventsMod.CloudWatchEventsNs.apiVersion] = js.undefined
  var cloudwatchlogs: js.UndefOr[awsDashSdkLib.clientsCloudwatchlogsMod.CloudWatchLogsNs.apiVersion] = js.undefined
  var codebuild: js.UndefOr[awsDashSdkLib.clientsCodebuildMod.CodeBuildNs.apiVersion] = js.undefined
  var codecommit: js.UndefOr[awsDashSdkLib.clientsCodecommitMod.CodeCommitNs.apiVersion] = js.undefined
  var codedeploy: js.UndefOr[awsDashSdkLib.clientsCodedeployMod.CodeDeployNs.apiVersion] = js.undefined
  var codepipeline: js.UndefOr[awsDashSdkLib.clientsCodepipelineMod.CodePipelineNs.apiVersion] = js.undefined
  var codestar: js.UndefOr[awsDashSdkLib.clientsCodestarMod.CodeStarNs.apiVersion] = js.undefined
  var cognitoidentity: js.UndefOr[awsDashSdkLib.clientsCognitoidentityMod.CognitoIdentityNs.apiVersion] = js.undefined
  var cognitoidentityserviceprovider: js.UndefOr[
    awsDashSdkLib.clientsCognitoidentityserviceproviderMod.CognitoIdentityServiceProviderNs.apiVersion
  ] = js.undefined
  var cognitosync: js.UndefOr[awsDashSdkLib.clientsCognitosyncMod.CognitoSyncNs.apiVersion] = js.undefined
  var comprehend: js.UndefOr[awsDashSdkLib.clientsComprehendMod.ComprehendNs.apiVersion] = js.undefined
  var comprehendmedical: js.UndefOr[awsDashSdkLib.clientsComprehendmedicalMod.ComprehendMedicalNs.apiVersion] = js.undefined
  var configservice: js.UndefOr[awsDashSdkLib.clientsConfigserviceMod.ConfigServiceNs.apiVersion] = js.undefined
  var connect: js.UndefOr[awsDashSdkLib.clientsConnectMod.ConnectNs.apiVersion] = js.undefined
  var costexplorer: js.UndefOr[awsDashSdkLib.clientsCostexplorerMod.CostExplorerNs.apiVersion] = js.undefined
  var cur: js.UndefOr[awsDashSdkLib.clientsCurMod.CURNs.apiVersion] = js.undefined
  var datapipeline: js.UndefOr[awsDashSdkLib.clientsDatapipelineMod.DataPipelineNs.apiVersion] = js.undefined
  var datasync: js.UndefOr[awsDashSdkLib.clientsDatasyncMod.DataSyncNs.apiVersion] = js.undefined
  var dax: js.UndefOr[awsDashSdkLib.clientsDaxMod.DAXNs.apiVersion] = js.undefined
  var devicefarm: js.UndefOr[awsDashSdkLib.clientsDevicefarmMod.DeviceFarmNs.apiVersion] = js.undefined
  var directconnect: js.UndefOr[awsDashSdkLib.clientsDirectconnectMod.DirectConnectNs.apiVersion] = js.undefined
  var directoryservice: js.UndefOr[awsDashSdkLib.clientsDirectoryserviceMod.DirectoryServiceNs.apiVersion] = js.undefined
  var discovery: js.UndefOr[awsDashSdkLib.clientsDiscoveryMod.DiscoveryNs.apiVersion] = js.undefined
  var dlm: js.UndefOr[awsDashSdkLib.clientsDlmMod.DLMNs.apiVersion] = js.undefined
  var dms: js.UndefOr[awsDashSdkLib.clientsDmsMod.DMSNs.apiVersion] = js.undefined
  var docdb: js.UndefOr[awsDashSdkLib.clientsDocdbMod.DocDBNs.apiVersion] = js.undefined
  var dynamodb: js.UndefOr[awsDashSdkLib.clientsDynamodbMod.DynamoDBNs.apiVersion] = js.undefined
  var dynamodbstreams: js.UndefOr[awsDashSdkLib.clientsDynamodbstreamsMod.DynamoDBStreamsNs.apiVersion] = js.undefined
  var ec2: js.UndefOr[awsDashSdkLib.clientsEc2Mod.EC2Ns.apiVersion] = js.undefined
  var ecr: js.UndefOr[awsDashSdkLib.clientsEcrMod.ECRNs.apiVersion] = js.undefined
  var ecs: js.UndefOr[awsDashSdkLib.clientsEcsMod.ECSNs.apiVersion] = js.undefined
  var efs: js.UndefOr[awsDashSdkLib.clientsEfsMod.EFSNs.apiVersion] = js.undefined
  var eks: js.UndefOr[awsDashSdkLib.clientsEksMod.EKSNs.apiVersion] = js.undefined
  var elasticache: js.UndefOr[awsDashSdkLib.clientsElasticacheMod.ElastiCacheNs.apiVersion] = js.undefined
  var elasticbeanstalk: js.UndefOr[awsDashSdkLib.clientsElasticbeanstalkMod.ElasticBeanstalkNs.apiVersion] = js.undefined
  var elastictranscoder: js.UndefOr[awsDashSdkLib.clientsElastictranscoderMod.ElasticTranscoderNs.apiVersion] = js.undefined
  var elb: js.UndefOr[awsDashSdkLib.clientsElbMod.ELBNs.apiVersion] = js.undefined
  var elbv2: js.UndefOr[awsDashSdkLib.clientsElbv2Mod.ELBv2Ns.apiVersion] = js.undefined
  var emr: js.UndefOr[awsDashSdkLib.clientsEmrMod.EMRNs.apiVersion] = js.undefined
  var es: js.UndefOr[awsDashSdkLib.clientsEsMod.ESNs.apiVersion] = js.undefined
  var firehose: js.UndefOr[awsDashSdkLib.clientsFirehoseMod.FirehoseNs.apiVersion] = js.undefined
  var fms: js.UndefOr[awsDashSdkLib.clientsFmsMod.FMSNs.apiVersion] = js.undefined
  var fsx: js.UndefOr[awsDashSdkLib.clientsFsxMod.FSxNs.apiVersion] = js.undefined
  var gamelift: js.UndefOr[awsDashSdkLib.clientsGameliftMod.GameLiftNs.apiVersion] = js.undefined
  var glacier: js.UndefOr[awsDashSdkLib.clientsGlacierMod.GlacierNs.apiVersion] = js.undefined
  var globalaccelerator: js.UndefOr[awsDashSdkLib.clientsGlobalacceleratorMod.GlobalAcceleratorNs.apiVersion] = js.undefined
  var glue: js.UndefOr[awsDashSdkLib.clientsGlueMod.GlueNs.apiVersion] = js.undefined
  var greengrass: js.UndefOr[awsDashSdkLib.clientsGreengrassMod.GreengrassNs.apiVersion] = js.undefined
  var guardduty: js.UndefOr[awsDashSdkLib.clientsGuarddutyMod.GuardDutyNs.apiVersion] = js.undefined
  var health: js.UndefOr[awsDashSdkLib.clientsHealthMod.HealthNs.apiVersion] = js.undefined
  var iam: js.UndefOr[awsDashSdkLib.clientsIamMod.IAMNs.apiVersion] = js.undefined
  var importexport: js.UndefOr[awsDashSdkLib.clientsImportexportMod.ImportExportNs.apiVersion] = js.undefined
  var inspector: js.UndefOr[awsDashSdkLib.clientsInspectorMod.InspectorNs.apiVersion] = js.undefined
  var iot: js.UndefOr[awsDashSdkLib.clientsIotMod.IotNs.apiVersion] = js.undefined
  var iot1clickdevicesservice: js.UndefOr[
    awsDashSdkLib.clientsIot1clickdevicesserviceMod.IoT1ClickDevicesServiceNs.apiVersion
  ] = js.undefined
  var iot1clickprojects: js.UndefOr[awsDashSdkLib.clientsIot1clickprojectsMod.IoT1ClickProjectsNs.apiVersion] = js.undefined
  var iotanalytics: js.UndefOr[awsDashSdkLib.clientsIotanalyticsMod.IoTAnalyticsNs.apiVersion] = js.undefined
  var iotdata: js.UndefOr[awsDashSdkLib.clientsIotdataMod.IotDataNs.apiVersion] = js.undefined
  var iotjobsdataplane: js.UndefOr[awsDashSdkLib.clientsIotjobsdataplaneMod.IoTJobsDataPlaneNs.apiVersion] = js.undefined
  var kafka: js.UndefOr[awsDashSdkLib.clientsKafkaMod.KafkaNs.apiVersion] = js.undefined
  var kinesis: js.UndefOr[awsDashSdkLib.clientsKinesisMod.KinesisNs.apiVersion] = js.undefined
  var kinesisanalytics: js.UndefOr[awsDashSdkLib.clientsKinesisanalyticsMod.KinesisAnalyticsNs.apiVersion] = js.undefined
  var kinesisanalyticsv2: js.UndefOr[awsDashSdkLib.clientsKinesisanalyticsv2Mod.KinesisAnalyticsV2Ns.apiVersion] = js.undefined
  var kinesisvideo: js.UndefOr[awsDashSdkLib.clientsKinesisvideoMod.KinesisVideoNs.apiVersion] = js.undefined
  var kinesisvideoarchivedmedia: js.UndefOr[
    awsDashSdkLib.clientsKinesisvideoarchivedmediaMod.KinesisVideoArchivedMediaNs.apiVersion
  ] = js.undefined
  var kinesisvideomedia: js.UndefOr[awsDashSdkLib.clientsKinesisvideomediaMod.KinesisVideoMediaNs.apiVersion] = js.undefined
  var kms: js.UndefOr[awsDashSdkLib.clientsKmsMod.KMSNs.apiVersion] = js.undefined
  var lambda: js.UndefOr[awsDashSdkLib.clientsLambdaMod.LambdaNs.apiVersion] = js.undefined
  var lexmodelbuildingservice: js.UndefOr[
    awsDashSdkLib.clientsLexmodelbuildingserviceMod.LexModelBuildingServiceNs.apiVersion
  ] = js.undefined
  var lexruntime: js.UndefOr[awsDashSdkLib.clientsLexruntimeMod.LexRuntimeNs.apiVersion] = js.undefined
  var licensemanager: js.UndefOr[awsDashSdkLib.clientsLicensemanagerMod.LicenseManagerNs.apiVersion] = js.undefined
  var lightsail: js.UndefOr[awsDashSdkLib.clientsLightsailMod.LightsailNs.apiVersion] = js.undefined
  var machinelearning: js.UndefOr[awsDashSdkLib.clientsMachinelearningMod.MachineLearningNs.apiVersion] = js.undefined
  var macie: js.UndefOr[awsDashSdkLib.clientsMacieMod.MacieNs.apiVersion] = js.undefined
  var marketplacecommerceanalytics: js.UndefOr[
    awsDashSdkLib.clientsMarketplacecommerceanalyticsMod.MarketplaceCommerceAnalyticsNs.apiVersion
  ] = js.undefined
  var marketplaceentitlementservice: js.UndefOr[
    awsDashSdkLib.clientsMarketplaceentitlementserviceMod.MarketplaceEntitlementServiceNs.apiVersion
  ] = js.undefined
  var marketplacemetering: js.UndefOr[awsDashSdkLib.clientsMarketplacemeteringMod.MarketplaceMeteringNs.apiVersion] = js.undefined
  var mediaconnect: js.UndefOr[awsDashSdkLib.clientsMediaconnectMod.MediaConnectNs.apiVersion] = js.undefined
  var mediaconvert: js.UndefOr[awsDashSdkLib.clientsMediaconvertMod.MediaConvertNs.apiVersion] = js.undefined
  var medialive: js.UndefOr[awsDashSdkLib.clientsMedialiveMod.MediaLiveNs.apiVersion] = js.undefined
  var mediapackage: js.UndefOr[awsDashSdkLib.clientsMediapackageMod.MediaPackageNs.apiVersion] = js.undefined
  var mediastore: js.UndefOr[awsDashSdkLib.clientsMediastoreMod.MediaStoreNs.apiVersion] = js.undefined
  var mediastoredata: js.UndefOr[awsDashSdkLib.clientsMediastoredataMod.MediaStoreDataNs.apiVersion] = js.undefined
  var mediatailor: js.UndefOr[awsDashSdkLib.clientsMediatailorMod.MediaTailorNs.apiVersion] = js.undefined
  var migrationhub: js.UndefOr[awsDashSdkLib.clientsMigrationhubMod.MigrationHubNs.apiVersion] = js.undefined
  var mobile: js.UndefOr[awsDashSdkLib.clientsMobileMod.MobileNs.apiVersion] = js.undefined
  var mobileanalytics: js.UndefOr[awsDashSdkLib.clientsMobileanalyticsMod.MobileAnalyticsNs.apiVersion] = js.undefined
  var mq: js.UndefOr[awsDashSdkLib.clientsMqMod.MQNs.apiVersion] = js.undefined
  var mturk: js.UndefOr[awsDashSdkLib.clientsMturkMod.MTurkNs.apiVersion] = js.undefined
  var neptune: js.UndefOr[awsDashSdkLib.clientsNeptuneMod.NeptuneNs.apiVersion] = js.undefined
  var opsworks: js.UndefOr[awsDashSdkLib.clientsOpsworksMod.OpsWorksNs.apiVersion] = js.undefined
  var opsworkscm: js.UndefOr[awsDashSdkLib.clientsOpsworkscmMod.OpsWorksCMNs.apiVersion] = js.undefined
  var organizations: js.UndefOr[awsDashSdkLib.clientsOrganizationsMod.OrganizationsNs.apiVersion] = js.undefined
  var pi: js.UndefOr[awsDashSdkLib.clientsPiMod.PINs.apiVersion] = js.undefined
  var pinpoint: js.UndefOr[awsDashSdkLib.clientsPinpointMod.PinpointNs.apiVersion] = js.undefined
  var pinpointemail: js.UndefOr[awsDashSdkLib.clientsPinpointemailMod.PinpointEmailNs.apiVersion] = js.undefined
  var pinpointsmsvoice: js.UndefOr[awsDashSdkLib.clientsPinpointsmsvoiceMod.PinpointSMSVoiceNs.apiVersion] = js.undefined
  var polly: js.UndefOr[awsDashSdkLib.clientsPollyMod.PollyNs.apiVersion] = js.undefined
  var pricing: js.UndefOr[awsDashSdkLib.clientsPricingMod.PricingNs.apiVersion] = js.undefined
  var quicksight: js.UndefOr[awsDashSdkLib.clientsQuicksightMod.QuickSightNs.apiVersion] = js.undefined
  var ram: js.UndefOr[awsDashSdkLib.clientsRamMod.RAMNs.apiVersion] = js.undefined
  var rds: js.UndefOr[awsDashSdkLib.clientsRdsMod.RDSNs.apiVersion] = js.undefined
  var rdsdataservice: js.UndefOr[awsDashSdkLib.clientsRdsdataserviceMod.RDSDataServiceNs.apiVersion] = js.undefined
  var redshift: js.UndefOr[awsDashSdkLib.clientsRedshiftMod.RedshiftNs.apiVersion] = js.undefined
  var rekognition: js.UndefOr[awsDashSdkLib.clientsRekognitionMod.RekognitionNs.apiVersion] = js.undefined
  var resourcegroups: js.UndefOr[awsDashSdkLib.clientsResourcegroupsMod.ResourceGroupsNs.apiVersion] = js.undefined
  var resourcegroupstaggingapi: js.UndefOr[
    awsDashSdkLib.clientsResourcegroupstaggingapiMod.ResourceGroupsTaggingAPINs.apiVersion
  ] = js.undefined
  var robomaker: js.UndefOr[awsDashSdkLib.clientsRobomakerMod.RoboMakerNs.apiVersion] = js.undefined
  var route53: js.UndefOr[awsDashSdkLib.clientsRoute53Mod.Route53Ns.apiVersion] = js.undefined
  var route53domains: js.UndefOr[awsDashSdkLib.clientsRoute53domainsMod.Route53DomainsNs.apiVersion] = js.undefined
  var route53resolver: js.UndefOr[awsDashSdkLib.clientsRoute53resolverMod.Route53ResolverNs.apiVersion] = js.undefined
  var s3: js.UndefOr[awsDashSdkLib.clientsS3Mod.S3Ns.apiVersion] = js.undefined
  var s3control: js.UndefOr[awsDashSdkLib.clientsS3controlMod.S3ControlNs.apiVersion] = js.undefined
  var sagemaker: js.UndefOr[awsDashSdkLib.clientsSagemakerMod.SageMakerNs.apiVersion] = js.undefined
  var sagemakerruntime: js.UndefOr[awsDashSdkLib.clientsSagemakerruntimeMod.SageMakerRuntimeNs.apiVersion] = js.undefined
  var secretsmanager: js.UndefOr[awsDashSdkLib.clientsSecretsmanagerMod.SecretsManagerNs.apiVersion] = js.undefined
  var securityhub: js.UndefOr[awsDashSdkLib.clientsSecurityhubMod.SecurityHubNs.apiVersion] = js.undefined
  var serverlessapplicationrepository: js.UndefOr[
    awsDashSdkLib.clientsServerlessapplicationrepositoryMod.ServerlessApplicationRepositoryNs.apiVersion
  ] = js.undefined
  var servicecatalog: js.UndefOr[awsDashSdkLib.clientsServicecatalogMod.ServiceCatalogNs.apiVersion] = js.undefined
  var servicediscovery: js.UndefOr[awsDashSdkLib.clientsServicediscoveryMod.ServiceDiscoveryNs.apiVersion] = js.undefined
  var ses: js.UndefOr[awsDashSdkLib.clientsSesMod.SESNs.apiVersion] = js.undefined
  var shield: js.UndefOr[awsDashSdkLib.clientsShieldMod.ShieldNs.apiVersion] = js.undefined
  var signer: js.UndefOr[awsDashSdkLib.clientsSignerMod.SignerNs.apiVersion] = js.undefined
  var simpledb: js.UndefOr[awsDashSdkLib.clientsSimpledbMod.SimpleDBNs.apiVersion] = js.undefined
  var sms: js.UndefOr[awsDashSdkLib.clientsSmsMod.SMSNs.apiVersion] = js.undefined
  var snowball: js.UndefOr[awsDashSdkLib.clientsSnowballMod.SnowballNs.apiVersion] = js.undefined
  var sns: js.UndefOr[awsDashSdkLib.clientsSnsMod.SNSNs.apiVersion] = js.undefined
  var sqs: js.UndefOr[awsDashSdkLib.clientsSqsMod.SQSNs.apiVersion] = js.undefined
  var ssm: js.UndefOr[awsDashSdkLib.clientsSsmMod.SSMNs.apiVersion] = js.undefined
  var stepfunctions: js.UndefOr[awsDashSdkLib.clientsStepfunctionsMod.StepFunctionsNs.apiVersion] = js.undefined
  var storagegateway: js.UndefOr[awsDashSdkLib.clientsStoragegatewayMod.StorageGatewayNs.apiVersion] = js.undefined
  var sts: js.UndefOr[awsDashSdkLib.clientsStsMod.STSNs.apiVersion] = js.undefined
  var support: js.UndefOr[awsDashSdkLib.clientsSupportMod.SupportNs.apiVersion] = js.undefined
  var swf: js.UndefOr[awsDashSdkLib.clientsSwfMod.SWFNs.apiVersion] = js.undefined
  var transcribeservice: js.UndefOr[awsDashSdkLib.clientsTranscribeserviceMod.TranscribeServiceNs.apiVersion] = js.undefined
  var transfer: js.UndefOr[awsDashSdkLib.clientsTransferMod.TransferNs.apiVersion] = js.undefined
  var translate: js.UndefOr[awsDashSdkLib.clientsTranslateMod.TranslateNs.apiVersion] = js.undefined
  var waf: js.UndefOr[awsDashSdkLib.clientsWafMod.WAFNs.apiVersion] = js.undefined
  var wafregional: js.UndefOr[awsDashSdkLib.clientsWafregionalMod.WAFRegionalNs.apiVersion] = js.undefined
  var workdocs: js.UndefOr[awsDashSdkLib.clientsWorkdocsMod.WorkDocsNs.apiVersion] = js.undefined
  var worklink: js.UndefOr[awsDashSdkLib.clientsWorklinkMod.WorkLinkNs.apiVersion] = js.undefined
  var workmail: js.UndefOr[awsDashSdkLib.clientsWorkmailMod.WorkMailNs.apiVersion] = js.undefined
  var workspaces: js.UndefOr[awsDashSdkLib.clientsWorkspacesMod.WorkSpacesNs.apiVersion] = js.undefined
  var xray: js.UndefOr[awsDashSdkLib.clientsXrayMod.XRayNs.apiVersion] = js.undefined
}

object ConfigurationServiceApiVersions {
  @scala.inline
  def apply(
    acm: awsDashSdkLib.clientsAcmMod.ACMNs.apiVersion = null,
    acmpca: awsDashSdkLib.clientsAcmpcaMod.ACMPCANs.apiVersion = null,
    alexaforbusiness: awsDashSdkLib.clientsAlexaforbusinessMod.AlexaForBusinessNs.apiVersion = null,
    amplify: awsDashSdkLib.clientsAmplifyMod.AmplifyNs.apiVersion = null,
    apigateway: awsDashSdkLib.clientsApigatewayMod.APIGatewayNs.apiVersion = null,
    apigatewaymanagementapi: awsDashSdkLib.clientsApigatewaymanagementapiMod.ApiGatewayManagementApiNs.apiVersion = null,
    apigatewayv2: awsDashSdkLib.clientsApigatewayv2Mod.ApiGatewayV2Ns.apiVersion = null,
    applicationautoscaling: awsDashSdkLib.clientsApplicationautoscalingMod.ApplicationAutoScalingNs.apiVersion = null,
    appmesh: awsDashSdkLib.clientsAppmeshMod.AppMeshNs.apiVersion = null,
    appstream: awsDashSdkLib.clientsAppstreamMod.AppStreamNs.apiVersion = null,
    appsync: awsDashSdkLib.clientsAppsyncMod.AppSyncNs.apiVersion = null,
    athena: awsDashSdkLib.clientsAthenaMod.AthenaNs.apiVersion = null,
    autoscaling: awsDashSdkLib.clientsAutoscalingMod.AutoScalingNs.apiVersion = null,
    autoscalingplans: awsDashSdkLib.clientsAutoscalingplansMod.AutoScalingPlansNs.apiVersion = null,
    backup: awsDashSdkLib.clientsBackupMod.BackupNs.apiVersion = null,
    batch: awsDashSdkLib.clientsBatchMod.BatchNs.apiVersion = null,
    budgets: /* import warning: QualifyReferences.resolveTypeRef many Couldn't qualify AWS.Budgets.Types.apiVersion */ js.Any = null,
    chime: awsDashSdkLib.clientsChimeMod.ChimeNs.apiVersion = null,
    cloud9: awsDashSdkLib.clientsCloud9Mod.Cloud9Ns.apiVersion = null,
    clouddirectory: awsDashSdkLib.clientsClouddirectoryMod.CloudDirectoryNs.apiVersion = null,
    cloudformation: awsDashSdkLib.clientsCloudformationMod.CloudFormationNs.apiVersion = null,
    cloudfront: awsDashSdkLib.clientsCloudfrontMod.CloudFrontNs.apiVersion = null,
    cloudhsm: awsDashSdkLib.clientsCloudhsmMod.CloudHSMNs.apiVersion = null,
    cloudhsmv2: awsDashSdkLib.clientsCloudhsmv2Mod.CloudHSMV2Ns.apiVersion = null,
    cloudsearch: awsDashSdkLib.clientsCloudsearchMod.CloudSearchNs.apiVersion = null,
    cloudsearchdomain: awsDashSdkLib.clientsCloudsearchdomainMod.CloudSearchDomainNs.apiVersion = null,
    cloudtrail: awsDashSdkLib.clientsCloudtrailMod.CloudTrailNs.apiVersion = null,
    cloudwatch: awsDashSdkLib.clientsCloudwatchMod.CloudWatchNs.apiVersion = null,
    cloudwatchevents: awsDashSdkLib.clientsCloudwatcheventsMod.CloudWatchEventsNs.apiVersion = null,
    cloudwatchlogs: awsDashSdkLib.clientsCloudwatchlogsMod.CloudWatchLogsNs.apiVersion = null,
    codebuild: awsDashSdkLib.clientsCodebuildMod.CodeBuildNs.apiVersion = null,
    codecommit: awsDashSdkLib.clientsCodecommitMod.CodeCommitNs.apiVersion = null,
    codedeploy: awsDashSdkLib.clientsCodedeployMod.CodeDeployNs.apiVersion = null,
    codepipeline: awsDashSdkLib.clientsCodepipelineMod.CodePipelineNs.apiVersion = null,
    codestar: awsDashSdkLib.clientsCodestarMod.CodeStarNs.apiVersion = null,
    cognitoidentity: awsDashSdkLib.clientsCognitoidentityMod.CognitoIdentityNs.apiVersion = null,
    cognitoidentityserviceprovider: awsDashSdkLib.clientsCognitoidentityserviceproviderMod.CognitoIdentityServiceProviderNs.apiVersion = null,
    cognitosync: awsDashSdkLib.clientsCognitosyncMod.CognitoSyncNs.apiVersion = null,
    comprehend: awsDashSdkLib.clientsComprehendMod.ComprehendNs.apiVersion = null,
    comprehendmedical: awsDashSdkLib.clientsComprehendmedicalMod.ComprehendMedicalNs.apiVersion = null,
    configservice: awsDashSdkLib.clientsConfigserviceMod.ConfigServiceNs.apiVersion = null,
    connect: awsDashSdkLib.clientsConnectMod.ConnectNs.apiVersion = null,
    costexplorer: awsDashSdkLib.clientsCostexplorerMod.CostExplorerNs.apiVersion = null,
    cur: awsDashSdkLib.clientsCurMod.CURNs.apiVersion = null,
    datapipeline: awsDashSdkLib.clientsDatapipelineMod.DataPipelineNs.apiVersion = null,
    datasync: awsDashSdkLib.clientsDatasyncMod.DataSyncNs.apiVersion = null,
    dax: awsDashSdkLib.clientsDaxMod.DAXNs.apiVersion = null,
    devicefarm: awsDashSdkLib.clientsDevicefarmMod.DeviceFarmNs.apiVersion = null,
    directconnect: awsDashSdkLib.clientsDirectconnectMod.DirectConnectNs.apiVersion = null,
    directoryservice: awsDashSdkLib.clientsDirectoryserviceMod.DirectoryServiceNs.apiVersion = null,
    discovery: awsDashSdkLib.clientsDiscoveryMod.DiscoveryNs.apiVersion = null,
    dlm: awsDashSdkLib.clientsDlmMod.DLMNs.apiVersion = null,
    dms: awsDashSdkLib.clientsDmsMod.DMSNs.apiVersion = null,
    docdb: awsDashSdkLib.clientsDocdbMod.DocDBNs.apiVersion = null,
    dynamodb: awsDashSdkLib.clientsDynamodbMod.DynamoDBNs.apiVersion = null,
    dynamodbstreams: awsDashSdkLib.clientsDynamodbstreamsMod.DynamoDBStreamsNs.apiVersion = null,
    ec2: awsDashSdkLib.clientsEc2Mod.EC2Ns.apiVersion = null,
    ecr: awsDashSdkLib.clientsEcrMod.ECRNs.apiVersion = null,
    ecs: awsDashSdkLib.clientsEcsMod.ECSNs.apiVersion = null,
    efs: awsDashSdkLib.clientsEfsMod.EFSNs.apiVersion = null,
    eks: awsDashSdkLib.clientsEksMod.EKSNs.apiVersion = null,
    elasticache: awsDashSdkLib.clientsElasticacheMod.ElastiCacheNs.apiVersion = null,
    elasticbeanstalk: awsDashSdkLib.clientsElasticbeanstalkMod.ElasticBeanstalkNs.apiVersion = null,
    elastictranscoder: awsDashSdkLib.clientsElastictranscoderMod.ElasticTranscoderNs.apiVersion = null,
    elb: awsDashSdkLib.clientsElbMod.ELBNs.apiVersion = null,
    elbv2: awsDashSdkLib.clientsElbv2Mod.ELBv2Ns.apiVersion = null,
    emr: awsDashSdkLib.clientsEmrMod.EMRNs.apiVersion = null,
    es: awsDashSdkLib.clientsEsMod.ESNs.apiVersion = null,
    firehose: awsDashSdkLib.clientsFirehoseMod.FirehoseNs.apiVersion = null,
    fms: awsDashSdkLib.clientsFmsMod.FMSNs.apiVersion = null,
    fsx: awsDashSdkLib.clientsFsxMod.FSxNs.apiVersion = null,
    gamelift: awsDashSdkLib.clientsGameliftMod.GameLiftNs.apiVersion = null,
    glacier: awsDashSdkLib.clientsGlacierMod.GlacierNs.apiVersion = null,
    globalaccelerator: awsDashSdkLib.clientsGlobalacceleratorMod.GlobalAcceleratorNs.apiVersion = null,
    glue: awsDashSdkLib.clientsGlueMod.GlueNs.apiVersion = null,
    greengrass: awsDashSdkLib.clientsGreengrassMod.GreengrassNs.apiVersion = null,
    guardduty: awsDashSdkLib.clientsGuarddutyMod.GuardDutyNs.apiVersion = null,
    health: awsDashSdkLib.clientsHealthMod.HealthNs.apiVersion = null,
    iam: awsDashSdkLib.clientsIamMod.IAMNs.apiVersion = null,
    importexport: awsDashSdkLib.clientsImportexportMod.ImportExportNs.apiVersion = null,
    inspector: awsDashSdkLib.clientsInspectorMod.InspectorNs.apiVersion = null,
    iot: awsDashSdkLib.clientsIotMod.IotNs.apiVersion = null,
    iot1clickdevicesservice: awsDashSdkLib.clientsIot1clickdevicesserviceMod.IoT1ClickDevicesServiceNs.apiVersion = null,
    iot1clickprojects: awsDashSdkLib.clientsIot1clickprojectsMod.IoT1ClickProjectsNs.apiVersion = null,
    iotanalytics: awsDashSdkLib.clientsIotanalyticsMod.IoTAnalyticsNs.apiVersion = null,
    iotdata: awsDashSdkLib.clientsIotdataMod.IotDataNs.apiVersion = null,
    iotjobsdataplane: awsDashSdkLib.clientsIotjobsdataplaneMod.IoTJobsDataPlaneNs.apiVersion = null,
    kafka: awsDashSdkLib.clientsKafkaMod.KafkaNs.apiVersion = null,
    kinesis: awsDashSdkLib.clientsKinesisMod.KinesisNs.apiVersion = null,
    kinesisanalytics: awsDashSdkLib.clientsKinesisanalyticsMod.KinesisAnalyticsNs.apiVersion = null,
    kinesisanalyticsv2: awsDashSdkLib.clientsKinesisanalyticsv2Mod.KinesisAnalyticsV2Ns.apiVersion = null,
    kinesisvideo: awsDashSdkLib.clientsKinesisvideoMod.KinesisVideoNs.apiVersion = null,
    kinesisvideoarchivedmedia: awsDashSdkLib.clientsKinesisvideoarchivedmediaMod.KinesisVideoArchivedMediaNs.apiVersion = null,
    kinesisvideomedia: awsDashSdkLib.clientsKinesisvideomediaMod.KinesisVideoMediaNs.apiVersion = null,
    kms: awsDashSdkLib.clientsKmsMod.KMSNs.apiVersion = null,
    lambda: awsDashSdkLib.clientsLambdaMod.LambdaNs.apiVersion = null,
    lexmodelbuildingservice: awsDashSdkLib.clientsLexmodelbuildingserviceMod.LexModelBuildingServiceNs.apiVersion = null,
    lexruntime: awsDashSdkLib.clientsLexruntimeMod.LexRuntimeNs.apiVersion = null,
    licensemanager: awsDashSdkLib.clientsLicensemanagerMod.LicenseManagerNs.apiVersion = null,
    lightsail: awsDashSdkLib.clientsLightsailMod.LightsailNs.apiVersion = null,
    machinelearning: awsDashSdkLib.clientsMachinelearningMod.MachineLearningNs.apiVersion = null,
    macie: awsDashSdkLib.clientsMacieMod.MacieNs.apiVersion = null,
    marketplacecommerceanalytics: awsDashSdkLib.clientsMarketplacecommerceanalyticsMod.MarketplaceCommerceAnalyticsNs.apiVersion = null,
    marketplaceentitlementservice: awsDashSdkLib.clientsMarketplaceentitlementserviceMod.MarketplaceEntitlementServiceNs.apiVersion = null,
    marketplacemetering: awsDashSdkLib.clientsMarketplacemeteringMod.MarketplaceMeteringNs.apiVersion = null,
    mediaconnect: awsDashSdkLib.clientsMediaconnectMod.MediaConnectNs.apiVersion = null,
    mediaconvert: awsDashSdkLib.clientsMediaconvertMod.MediaConvertNs.apiVersion = null,
    medialive: awsDashSdkLib.clientsMedialiveMod.MediaLiveNs.apiVersion = null,
    mediapackage: awsDashSdkLib.clientsMediapackageMod.MediaPackageNs.apiVersion = null,
    mediastore: awsDashSdkLib.clientsMediastoreMod.MediaStoreNs.apiVersion = null,
    mediastoredata: awsDashSdkLib.clientsMediastoredataMod.MediaStoreDataNs.apiVersion = null,
    mediatailor: awsDashSdkLib.clientsMediatailorMod.MediaTailorNs.apiVersion = null,
    migrationhub: awsDashSdkLib.clientsMigrationhubMod.MigrationHubNs.apiVersion = null,
    mobile: awsDashSdkLib.clientsMobileMod.MobileNs.apiVersion = null,
    mobileanalytics: awsDashSdkLib.clientsMobileanalyticsMod.MobileAnalyticsNs.apiVersion = null,
    mq: awsDashSdkLib.clientsMqMod.MQNs.apiVersion = null,
    mturk: awsDashSdkLib.clientsMturkMod.MTurkNs.apiVersion = null,
    neptune: awsDashSdkLib.clientsNeptuneMod.NeptuneNs.apiVersion = null,
    opsworks: awsDashSdkLib.clientsOpsworksMod.OpsWorksNs.apiVersion = null,
    opsworkscm: awsDashSdkLib.clientsOpsworkscmMod.OpsWorksCMNs.apiVersion = null,
    organizations: awsDashSdkLib.clientsOrganizationsMod.OrganizationsNs.apiVersion = null,
    pi: awsDashSdkLib.clientsPiMod.PINs.apiVersion = null,
    pinpoint: awsDashSdkLib.clientsPinpointMod.PinpointNs.apiVersion = null,
    pinpointemail: awsDashSdkLib.clientsPinpointemailMod.PinpointEmailNs.apiVersion = null,
    pinpointsmsvoice: awsDashSdkLib.clientsPinpointsmsvoiceMod.PinpointSMSVoiceNs.apiVersion = null,
    polly: awsDashSdkLib.clientsPollyMod.PollyNs.apiVersion = null,
    pricing: awsDashSdkLib.clientsPricingMod.PricingNs.apiVersion = null,
    quicksight: awsDashSdkLib.clientsQuicksightMod.QuickSightNs.apiVersion = null,
    ram: awsDashSdkLib.clientsRamMod.RAMNs.apiVersion = null,
    rds: awsDashSdkLib.clientsRdsMod.RDSNs.apiVersion = null,
    rdsdataservice: awsDashSdkLib.clientsRdsdataserviceMod.RDSDataServiceNs.apiVersion = null,
    redshift: awsDashSdkLib.clientsRedshiftMod.RedshiftNs.apiVersion = null,
    rekognition: awsDashSdkLib.clientsRekognitionMod.RekognitionNs.apiVersion = null,
    resourcegroups: awsDashSdkLib.clientsResourcegroupsMod.ResourceGroupsNs.apiVersion = null,
    resourcegroupstaggingapi: awsDashSdkLib.clientsResourcegroupstaggingapiMod.ResourceGroupsTaggingAPINs.apiVersion = null,
    robomaker: awsDashSdkLib.clientsRobomakerMod.RoboMakerNs.apiVersion = null,
    route53: awsDashSdkLib.clientsRoute53Mod.Route53Ns.apiVersion = null,
    route53domains: awsDashSdkLib.clientsRoute53domainsMod.Route53DomainsNs.apiVersion = null,
    route53resolver: awsDashSdkLib.clientsRoute53resolverMod.Route53ResolverNs.apiVersion = null,
    s3: awsDashSdkLib.clientsS3Mod.S3Ns.apiVersion = null,
    s3control: awsDashSdkLib.clientsS3controlMod.S3ControlNs.apiVersion = null,
    sagemaker: awsDashSdkLib.clientsSagemakerMod.SageMakerNs.apiVersion = null,
    sagemakerruntime: awsDashSdkLib.clientsSagemakerruntimeMod.SageMakerRuntimeNs.apiVersion = null,
    secretsmanager: awsDashSdkLib.clientsSecretsmanagerMod.SecretsManagerNs.apiVersion = null,
    securityhub: awsDashSdkLib.clientsSecurityhubMod.SecurityHubNs.apiVersion = null,
    serverlessapplicationrepository: awsDashSdkLib.clientsServerlessapplicationrepositoryMod.ServerlessApplicationRepositoryNs.apiVersion = null,
    servicecatalog: awsDashSdkLib.clientsServicecatalogMod.ServiceCatalogNs.apiVersion = null,
    servicediscovery: awsDashSdkLib.clientsServicediscoveryMod.ServiceDiscoveryNs.apiVersion = null,
    ses: awsDashSdkLib.clientsSesMod.SESNs.apiVersion = null,
    shield: awsDashSdkLib.clientsShieldMod.ShieldNs.apiVersion = null
  ): ConfigurationServiceApiVersions = {
    val __obj = js.Dynamic.literal()
    if (acm != null) __obj.updateDynamic("acm")(acm.asInstanceOf[js.Any])
    if (acmpca != null) __obj.updateDynamic("acmpca")(acmpca.asInstanceOf[js.Any])
    if (alexaforbusiness != null) __obj.updateDynamic("alexaforbusiness")(alexaforbusiness.asInstanceOf[js.Any])
    if (amplify != null) __obj.updateDynamic("amplify")(amplify.asInstanceOf[js.Any])
    if (apigateway != null) __obj.updateDynamic("apigateway")(apigateway.asInstanceOf[js.Any])
    if (apigatewaymanagementapi != null) __obj.updateDynamic("apigatewaymanagementapi")(apigatewaymanagementapi.asInstanceOf[js.Any])
    if (apigatewayv2 != null) __obj.updateDynamic("apigatewayv2")(apigatewayv2.asInstanceOf[js.Any])
    if (applicationautoscaling != null) __obj.updateDynamic("applicationautoscaling")(applicationautoscaling.asInstanceOf[js.Any])
    if (appmesh != null) __obj.updateDynamic("appmesh")(appmesh.asInstanceOf[js.Any])
    if (appstream != null) __obj.updateDynamic("appstream")(appstream.asInstanceOf[js.Any])
    if (appsync != null) __obj.updateDynamic("appsync")(appsync.asInstanceOf[js.Any])
    if (athena != null) __obj.updateDynamic("athena")(athena.asInstanceOf[js.Any])
    if (autoscaling != null) __obj.updateDynamic("autoscaling")(autoscaling.asInstanceOf[js.Any])
    if (autoscalingplans != null) __obj.updateDynamic("autoscalingplans")(autoscalingplans.asInstanceOf[js.Any])
    if (backup != null) __obj.updateDynamic("backup")(backup.asInstanceOf[js.Any])
    if (batch != null) __obj.updateDynamic("batch")(batch.asInstanceOf[js.Any])
    if (budgets != null) __obj.updateDynamic("budgets")(budgets)
    if (chime != null) __obj.updateDynamic("chime")(chime.asInstanceOf[js.Any])
    if (cloud9 != null) __obj.updateDynamic("cloud9")(cloud9.asInstanceOf[js.Any])
    if (clouddirectory != null) __obj.updateDynamic("clouddirectory")(clouddirectory.asInstanceOf[js.Any])
    if (cloudformation != null) __obj.updateDynamic("cloudformation")(cloudformation.asInstanceOf[js.Any])
    if (cloudfront != null) __obj.updateDynamic("cloudfront")(cloudfront.asInstanceOf[js.Any])
    if (cloudhsm != null) __obj.updateDynamic("cloudhsm")(cloudhsm.asInstanceOf[js.Any])
    if (cloudhsmv2 != null) __obj.updateDynamic("cloudhsmv2")(cloudhsmv2.asInstanceOf[js.Any])
    if (cloudsearch != null) __obj.updateDynamic("cloudsearch")(cloudsearch.asInstanceOf[js.Any])
    if (cloudsearchdomain != null) __obj.updateDynamic("cloudsearchdomain")(cloudsearchdomain.asInstanceOf[js.Any])
    if (cloudtrail != null) __obj.updateDynamic("cloudtrail")(cloudtrail.asInstanceOf[js.Any])
    if (cloudwatch != null) __obj.updateDynamic("cloudwatch")(cloudwatch.asInstanceOf[js.Any])
    if (cloudwatchevents != null) __obj.updateDynamic("cloudwatchevents")(cloudwatchevents.asInstanceOf[js.Any])
    if (cloudwatchlogs != null) __obj.updateDynamic("cloudwatchlogs")(cloudwatchlogs.asInstanceOf[js.Any])
    if (codebuild != null) __obj.updateDynamic("codebuild")(codebuild.asInstanceOf[js.Any])
    if (codecommit != null) __obj.updateDynamic("codecommit")(codecommit.asInstanceOf[js.Any])
    if (codedeploy != null) __obj.updateDynamic("codedeploy")(codedeploy.asInstanceOf[js.Any])
    if (codepipeline != null) __obj.updateDynamic("codepipeline")(codepipeline.asInstanceOf[js.Any])
    if (codestar != null) __obj.updateDynamic("codestar")(codestar.asInstanceOf[js.Any])
    if (cognitoidentity != null) __obj.updateDynamic("cognitoidentity")(cognitoidentity.asInstanceOf[js.Any])
    if (cognitoidentityserviceprovider != null) __obj.updateDynamic("cognitoidentityserviceprovider")(cognitoidentityserviceprovider.asInstanceOf[js.Any])
    if (cognitosync != null) __obj.updateDynamic("cognitosync")(cognitosync.asInstanceOf[js.Any])
    if (comprehend != null) __obj.updateDynamic("comprehend")(comprehend.asInstanceOf[js.Any])
    if (comprehendmedical != null) __obj.updateDynamic("comprehendmedical")(comprehendmedical.asInstanceOf[js.Any])
    if (configservice != null) __obj.updateDynamic("configservice")(configservice.asInstanceOf[js.Any])
    if (connect != null) __obj.updateDynamic("connect")(connect.asInstanceOf[js.Any])
    if (costexplorer != null) __obj.updateDynamic("costexplorer")(costexplorer.asInstanceOf[js.Any])
    if (cur != null) __obj.updateDynamic("cur")(cur.asInstanceOf[js.Any])
    if (datapipeline != null) __obj.updateDynamic("datapipeline")(datapipeline.asInstanceOf[js.Any])
    if (datasync != null) __obj.updateDynamic("datasync")(datasync.asInstanceOf[js.Any])
    if (dax != null) __obj.updateDynamic("dax")(dax.asInstanceOf[js.Any])
    if (devicefarm != null) __obj.updateDynamic("devicefarm")(devicefarm.asInstanceOf[js.Any])
    if (directconnect != null) __obj.updateDynamic("directconnect")(directconnect.asInstanceOf[js.Any])
    if (directoryservice != null) __obj.updateDynamic("directoryservice")(directoryservice.asInstanceOf[js.Any])
    if (discovery != null) __obj.updateDynamic("discovery")(discovery.asInstanceOf[js.Any])
    if (dlm != null) __obj.updateDynamic("dlm")(dlm.asInstanceOf[js.Any])
    if (dms != null) __obj.updateDynamic("dms")(dms.asInstanceOf[js.Any])
    if (docdb != null) __obj.updateDynamic("docdb")(docdb.asInstanceOf[js.Any])
    if (dynamodb != null) __obj.updateDynamic("dynamodb")(dynamodb.asInstanceOf[js.Any])
    if (dynamodbstreams != null) __obj.updateDynamic("dynamodbstreams")(dynamodbstreams.asInstanceOf[js.Any])
    if (ec2 != null) __obj.updateDynamic("ec2")(ec2.asInstanceOf[js.Any])
    if (ecr != null) __obj.updateDynamic("ecr")(ecr.asInstanceOf[js.Any])
    if (ecs != null) __obj.updateDynamic("ecs")(ecs.asInstanceOf[js.Any])
    if (efs != null) __obj.updateDynamic("efs")(efs.asInstanceOf[js.Any])
    if (eks != null) __obj.updateDynamic("eks")(eks.asInstanceOf[js.Any])
    if (elasticache != null) __obj.updateDynamic("elasticache")(elasticache.asInstanceOf[js.Any])
    if (elasticbeanstalk != null) __obj.updateDynamic("elasticbeanstalk")(elasticbeanstalk.asInstanceOf[js.Any])
    if (elastictranscoder != null) __obj.updateDynamic("elastictranscoder")(elastictranscoder.asInstanceOf[js.Any])
    if (elb != null) __obj.updateDynamic("elb")(elb.asInstanceOf[js.Any])
    if (elbv2 != null) __obj.updateDynamic("elbv2")(elbv2.asInstanceOf[js.Any])
    if (emr != null) __obj.updateDynamic("emr")(emr.asInstanceOf[js.Any])
    if (es != null) __obj.updateDynamic("es")(es.asInstanceOf[js.Any])
    if (firehose != null) __obj.updateDynamic("firehose")(firehose.asInstanceOf[js.Any])
    if (fms != null) __obj.updateDynamic("fms")(fms.asInstanceOf[js.Any])
    if (fsx != null) __obj.updateDynamic("fsx")(fsx.asInstanceOf[js.Any])
    if (gamelift != null) __obj.updateDynamic("gamelift")(gamelift.asInstanceOf[js.Any])
    if (glacier != null) __obj.updateDynamic("glacier")(glacier.asInstanceOf[js.Any])
    if (globalaccelerator != null) __obj.updateDynamic("globalaccelerator")(globalaccelerator.asInstanceOf[js.Any])
    if (glue != null) __obj.updateDynamic("glue")(glue.asInstanceOf[js.Any])
    if (greengrass != null) __obj.updateDynamic("greengrass")(greengrass.asInstanceOf[js.Any])
    if (guardduty != null) __obj.updateDynamic("guardduty")(guardduty.asInstanceOf[js.Any])
    if (health != null) __obj.updateDynamic("health")(health.asInstanceOf[js.Any])
    if (iam != null) __obj.updateDynamic("iam")(iam.asInstanceOf[js.Any])
    if (importexport != null) __obj.updateDynamic("importexport")(importexport.asInstanceOf[js.Any])
    if (inspector != null) __obj.updateDynamic("inspector")(inspector.asInstanceOf[js.Any])
    if (iot != null) __obj.updateDynamic("iot")(iot.asInstanceOf[js.Any])
    if (iot1clickdevicesservice != null) __obj.updateDynamic("iot1clickdevicesservice")(iot1clickdevicesservice.asInstanceOf[js.Any])
    if (iot1clickprojects != null) __obj.updateDynamic("iot1clickprojects")(iot1clickprojects.asInstanceOf[js.Any])
    if (iotanalytics != null) __obj.updateDynamic("iotanalytics")(iotanalytics.asInstanceOf[js.Any])
    if (iotdata != null) __obj.updateDynamic("iotdata")(iotdata.asInstanceOf[js.Any])
    if (iotjobsdataplane != null) __obj.updateDynamic("iotjobsdataplane")(iotjobsdataplane.asInstanceOf[js.Any])
    if (kafka != null) __obj.updateDynamic("kafka")(kafka.asInstanceOf[js.Any])
    if (kinesis != null) __obj.updateDynamic("kinesis")(kinesis.asInstanceOf[js.Any])
    if (kinesisanalytics != null) __obj.updateDynamic("kinesisanalytics")(kinesisanalytics.asInstanceOf[js.Any])
    if (kinesisanalyticsv2 != null) __obj.updateDynamic("kinesisanalyticsv2")(kinesisanalyticsv2.asInstanceOf[js.Any])
    if (kinesisvideo != null) __obj.updateDynamic("kinesisvideo")(kinesisvideo.asInstanceOf[js.Any])
    if (kinesisvideoarchivedmedia != null) __obj.updateDynamic("kinesisvideoarchivedmedia")(kinesisvideoarchivedmedia.asInstanceOf[js.Any])
    if (kinesisvideomedia != null) __obj.updateDynamic("kinesisvideomedia")(kinesisvideomedia.asInstanceOf[js.Any])
    if (kms != null) __obj.updateDynamic("kms")(kms.asInstanceOf[js.Any])
    if (lambda != null) __obj.updateDynamic("lambda")(lambda.asInstanceOf[js.Any])
    if (lexmodelbuildingservice != null) __obj.updateDynamic("lexmodelbuildingservice")(lexmodelbuildingservice.asInstanceOf[js.Any])
    if (lexruntime != null) __obj.updateDynamic("lexruntime")(lexruntime.asInstanceOf[js.Any])
    if (licensemanager != null) __obj.updateDynamic("licensemanager")(licensemanager.asInstanceOf[js.Any])
    if (lightsail != null) __obj.updateDynamic("lightsail")(lightsail.asInstanceOf[js.Any])
    if (machinelearning != null) __obj.updateDynamic("machinelearning")(machinelearning.asInstanceOf[js.Any])
    if (macie != null) __obj.updateDynamic("macie")(macie.asInstanceOf[js.Any])
    if (marketplacecommerceanalytics != null) __obj.updateDynamic("marketplacecommerceanalytics")(marketplacecommerceanalytics.asInstanceOf[js.Any])
    if (marketplaceentitlementservice != null) __obj.updateDynamic("marketplaceentitlementservice")(marketplaceentitlementservice.asInstanceOf[js.Any])
    if (marketplacemetering != null) __obj.updateDynamic("marketplacemetering")(marketplacemetering.asInstanceOf[js.Any])
    if (mediaconnect != null) __obj.updateDynamic("mediaconnect")(mediaconnect.asInstanceOf[js.Any])
    if (mediaconvert != null) __obj.updateDynamic("mediaconvert")(mediaconvert.asInstanceOf[js.Any])
    if (medialive != null) __obj.updateDynamic("medialive")(medialive.asInstanceOf[js.Any])
    if (mediapackage != null) __obj.updateDynamic("mediapackage")(mediapackage.asInstanceOf[js.Any])
    if (mediastore != null) __obj.updateDynamic("mediastore")(mediastore.asInstanceOf[js.Any])
    if (mediastoredata != null) __obj.updateDynamic("mediastoredata")(mediastoredata.asInstanceOf[js.Any])
    if (mediatailor != null) __obj.updateDynamic("mediatailor")(mediatailor.asInstanceOf[js.Any])
    if (migrationhub != null) __obj.updateDynamic("migrationhub")(migrationhub.asInstanceOf[js.Any])
    if (mobile != null) __obj.updateDynamic("mobile")(mobile.asInstanceOf[js.Any])
    if (mobileanalytics != null) __obj.updateDynamic("mobileanalytics")(mobileanalytics.asInstanceOf[js.Any])
    if (mq != null) __obj.updateDynamic("mq")(mq.asInstanceOf[js.Any])
    if (mturk != null) __obj.updateDynamic("mturk")(mturk.asInstanceOf[js.Any])
    if (neptune != null) __obj.updateDynamic("neptune")(neptune.asInstanceOf[js.Any])
    if (opsworks != null) __obj.updateDynamic("opsworks")(opsworks.asInstanceOf[js.Any])
    if (opsworkscm != null) __obj.updateDynamic("opsworkscm")(opsworkscm.asInstanceOf[js.Any])
    if (organizations != null) __obj.updateDynamic("organizations")(organizations.asInstanceOf[js.Any])
    if (pi != null) __obj.updateDynamic("pi")(pi.asInstanceOf[js.Any])
    if (pinpoint != null) __obj.updateDynamic("pinpoint")(pinpoint.asInstanceOf[js.Any])
    if (pinpointemail != null) __obj.updateDynamic("pinpointemail")(pinpointemail.asInstanceOf[js.Any])
    if (pinpointsmsvoice != null) __obj.updateDynamic("pinpointsmsvoice")(pinpointsmsvoice.asInstanceOf[js.Any])
    if (polly != null) __obj.updateDynamic("polly")(polly.asInstanceOf[js.Any])
    if (pricing != null) __obj.updateDynamic("pricing")(pricing.asInstanceOf[js.Any])
    if (quicksight != null) __obj.updateDynamic("quicksight")(quicksight.asInstanceOf[js.Any])
    if (ram != null) __obj.updateDynamic("ram")(ram.asInstanceOf[js.Any])
    if (rds != null) __obj.updateDynamic("rds")(rds.asInstanceOf[js.Any])
    if (rdsdataservice != null) __obj.updateDynamic("rdsdataservice")(rdsdataservice.asInstanceOf[js.Any])
    if (redshift != null) __obj.updateDynamic("redshift")(redshift.asInstanceOf[js.Any])
    if (rekognition != null) __obj.updateDynamic("rekognition")(rekognition.asInstanceOf[js.Any])
    if (resourcegroups != null) __obj.updateDynamic("resourcegroups")(resourcegroups.asInstanceOf[js.Any])
    if (resourcegroupstaggingapi != null) __obj.updateDynamic("resourcegroupstaggingapi")(resourcegroupstaggingapi.asInstanceOf[js.Any])
    if (robomaker != null) __obj.updateDynamic("robomaker")(robomaker.asInstanceOf[js.Any])
    if (route53 != null) __obj.updateDynamic("route53")(route53.asInstanceOf[js.Any])
    if (route53domains != null) __obj.updateDynamic("route53domains")(route53domains.asInstanceOf[js.Any])
    if (route53resolver != null) __obj.updateDynamic("route53resolver")(route53resolver.asInstanceOf[js.Any])
    if (s3 != null) __obj.updateDynamic("s3")(s3.asInstanceOf[js.Any])
    if (s3control != null) __obj.updateDynamic("s3control")(s3control.asInstanceOf[js.Any])
    if (sagemaker != null) __obj.updateDynamic("sagemaker")(sagemaker.asInstanceOf[js.Any])
    if (sagemakerruntime != null) __obj.updateDynamic("sagemakerruntime")(sagemakerruntime.asInstanceOf[js.Any])
    if (secretsmanager != null) __obj.updateDynamic("secretsmanager")(secretsmanager.asInstanceOf[js.Any])
    if (securityhub != null) __obj.updateDynamic("securityhub")(securityhub.asInstanceOf[js.Any])
    if (serverlessapplicationrepository != null) __obj.updateDynamic("serverlessapplicationrepository")(serverlessapplicationrepository.asInstanceOf[js.Any])
    if (servicecatalog != null) __obj.updateDynamic("servicecatalog")(servicecatalog.asInstanceOf[js.Any])
    if (servicediscovery != null) __obj.updateDynamic("servicediscovery")(servicediscovery.asInstanceOf[js.Any])
    if (ses != null) __obj.updateDynamic("ses")(ses.asInstanceOf[js.Any])
    if (shield != null) __obj.updateDynamic("shield")(shield.asInstanceOf[js.Any])
    __obj.asInstanceOf[ConfigurationServiceApiVersions]
  }
}

