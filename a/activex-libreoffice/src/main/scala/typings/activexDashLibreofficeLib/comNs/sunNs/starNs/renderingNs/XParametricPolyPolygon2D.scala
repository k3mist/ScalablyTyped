package typings
package activexDashLibreofficeLib.comNs.sunNs.starNs.renderingNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Interface to a dynamic poly-polygon generator, that generates poly-polygons depending on a given parameter value.
  *
  * The returned poly-polygon should normally be contained in the [0,1]x[0,1] rectangle. At least that is the dimension expected at other places. e.g.
  * {@link Texture} .
  */
trait XParametricPolyPolygon2D
  extends activexDashLibreofficeLib.comNs.sunNs.starNs.unoNs.XInterface {
  /**
    * Query the color space employed by this object
    * @returns the color space the colors generated by this object are to be interpreted in.
    */
  val ColorSpace: XColorSpace
  /**
    * Query the color value for the polygonal area at the specified parameter value.
    * @param t Parameter value in the range [0,1]. During painting, this range is swept through starting from 0.
    */
  def getColor(t: scala.Double): activexDashInteropLib.SafeArray[ColorComponent]
  /**
    * Query the color space employed by this object
    * @returns the color space the colors generated by this object are to be interpreted in.
    */
  def getColorSpace(): XColorSpace
  /**
    * Query the polygonal outline at the specified value.
    *
    * The returned outline should be clipped to the [0,1]x[0,1] rectangle.
    * @param t Parameter value in the range [0,1]. During painting, this range is swept through starting from 0. When using such a parametric poly-polygon for
    */
  def getOutline(t: scala.Double): XPolyPolygon2D
  /**
    * Query the color for a dedicated point in the plane.
    * @param point The permissible parameter range for point is [0,1]x[0,1]
    */
  def getPointColor(point: activexDashLibreofficeLib.comNs.sunNs.starNs.geometryNs.RealPoint2D): activexDashInteropLib.SafeArray[ColorComponent]
}

object XParametricPolyPolygon2D {
  @scala.inline
  def apply(
    ColorSpace: XColorSpace,
    acquire: js.Function0[scala.Unit],
    getColor: js.Function1[scala.Double, activexDashInteropLib.SafeArray[ColorComponent]],
    getColorSpace: js.Function0[XColorSpace],
    getOutline: js.Function1[scala.Double, XPolyPolygon2D],
    getPointColor: js.Function1[
      activexDashLibreofficeLib.comNs.sunNs.starNs.geometryNs.RealPoint2D, 
      activexDashInteropLib.SafeArray[ColorComponent]
    ],
    queryInterface: js.Function1[activexDashLibreofficeLib.`type`, js.Any],
    release: js.Function0[scala.Unit]
  ): XParametricPolyPolygon2D = {
    val __obj = js.Dynamic.literal(ColorSpace = ColorSpace, acquire = acquire, getColor = getColor, getColorSpace = getColorSpace, getOutline = getOutline, getPointColor = getPointColor, queryInterface = queryInterface, release = release)
  
    __obj.asInstanceOf[XParametricPolyPolygon2D]
  }
}

