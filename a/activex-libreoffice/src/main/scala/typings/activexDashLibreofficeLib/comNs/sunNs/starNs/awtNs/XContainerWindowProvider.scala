package typings
package activexDashLibreofficeLib.comNs.sunNs.starNs.awtNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/** provides container windows implementing the {@link com.sun.star.awt.XWindow} interface. */
trait XContainerWindowProvider
  extends activexDashLibreofficeLib.comNs.sunNs.starNs.unoNs.XInterface {
  /**
    * creates a window for the given URL
    * @param URL is the URL.
    * @param WindowType Type of Window to be created, for future use, not supported yet
    * @param xParent a valid {@link XWindowPeer} reference which is used as a parent. This parameter must not be null.
    * @param xHandler is the interface that will be called to handle the Events that are generated by the window (and all controls placed on it) and bound to
    * @returns a window implementing the {@link com.sun.star.awt.XWindow} interface.
    * @see com.sun.star.awt.XContainerWindowEventHandler
    * @throws com::sun::star::lang::IllegalArgumentException if no window for the given URL is found or if the URL is invalid or xParent is null.
    */
  def createContainerWindow(
    URL: java.lang.String,
    WindowType: java.lang.String,
    xParent: XWindowPeer,
    xHandler: activexDashLibreofficeLib.comNs.sunNs.starNs.unoNs.XInterface
  ): XWindow
}

object XContainerWindowProvider {
  @scala.inline
  def apply(
    acquire: js.Function0[scala.Unit],
    createContainerWindow: js.Function4[
      java.lang.String, 
      java.lang.String, 
      XWindowPeer, 
      activexDashLibreofficeLib.comNs.sunNs.starNs.unoNs.XInterface, 
      XWindow
    ],
    queryInterface: js.Function1[activexDashLibreofficeLib.`type`, js.Any],
    release: js.Function0[scala.Unit]
  ): XContainerWindowProvider = {
    val __obj = js.Dynamic.literal(acquire = acquire, createContainerWindow = createContainerWindow, queryInterface = queryInterface, release = release)
  
    __obj.asInstanceOf[XContainerWindowProvider]
  }
}

