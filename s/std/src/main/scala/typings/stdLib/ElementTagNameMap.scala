package typings
package stdLib

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/** @deprecated Directly use HTMLElementTagNameMap or SVGElementTagNameMap as appropriate, instead. */
trait ElementTagNameMap
  extends HTMLElementTagNameMap
     with SVGElementTagNameMap

object ElementTagNameMap {
  @scala.inline
  def apply(
    a: HTMLAnchorElement,
    abbr: HTMLElement,
    address: HTMLElement,
    applet: HTMLAppletElement,
    area: HTMLAreaElement,
    article: HTMLElement,
    aside: HTMLElement,
    audio: HTMLAudioElement,
    b: HTMLElement,
    base: HTMLBaseElement,
    basefont: HTMLBaseFontElement,
    bdo: HTMLElement,
    blockquote: HTMLQuoteElement,
    body: HTMLBodyElement,
    br: HTMLBRElement,
    button: HTMLButtonElement,
    canvas: HTMLCanvasElement,
    caption: HTMLTableCaptionElement,
    circle: SVGCircleElement,
    cite: HTMLElement,
    clipPath: SVGClipPathElement,
    code: HTMLElement,
    col: HTMLTableColElement,
    colgroup: HTMLTableColElement,
    data: HTMLDataElement,
    datalist: HTMLDataListElement,
    dd: HTMLElement,
    defs: SVGDefsElement,
    del: HTMLModElement,
    desc: SVGDescElement,
    details: HTMLDetailsElement,
    dfn: HTMLElement,
    dialog: HTMLDialogElement,
    dir: HTMLDirectoryElement,
    div: HTMLDivElement,
    dl: HTMLDListElement,
    dt: HTMLElement,
    ellipse: SVGEllipseElement,
    em: HTMLElement,
    embed: HTMLEmbedElement,
    feBlend: SVGFEBlendElement,
    feColorMatrix: SVGFEColorMatrixElement,
    feComponentTransfer: SVGFEComponentTransferElement,
    feComposite: SVGFECompositeElement,
    feConvolveMatrix: SVGFEConvolveMatrixElement,
    feDiffuseLighting: SVGFEDiffuseLightingElement,
    feDisplacementMap: SVGFEDisplacementMapElement,
    feDistantLight: SVGFEDistantLightElement,
    feFlood: SVGFEFloodElement,
    feFuncA: SVGFEFuncAElement,
    feFuncB: SVGFEFuncBElement,
    feFuncG: SVGFEFuncGElement,
    feFuncR: SVGFEFuncRElement,
    feGaussianBlur: SVGFEGaussianBlurElement,
    feImage: SVGFEImageElement,
    feMerge: SVGFEMergeElement,
    feMergeNode: SVGFEMergeNodeElement,
    feMorphology: SVGFEMorphologyElement,
    feOffset: SVGFEOffsetElement,
    fePointLight: SVGFEPointLightElement,
    feSpecularLighting: SVGFESpecularLightingElement,
    feSpotLight: SVGFESpotLightElement,
    feTile: SVGFETileElement,
    feTurbulence: SVGFETurbulenceElement,
    fieldset: HTMLFieldSetElement,
    figcaption: HTMLElement,
    figure: HTMLElement,
    filter: SVGFilterElement,
    font: HTMLFontElement,
    footer: HTMLElement,
    foreignObject: SVGForeignObjectElement,
    form: HTMLFormElement,
    frame: HTMLFrameElement,
    frameset: HTMLFrameSetElement,
    g: SVGGElement,
    h1: HTMLHeadingElement,
    h2: HTMLHeadingElement,
    h3: HTMLHeadingElement,
    h4: HTMLHeadingElement,
    h5: HTMLHeadingElement,
    h6: HTMLHeadingElement,
    head: HTMLHeadElement,
    header: HTMLElement,
    hgroup: HTMLElement,
    hr: HTMLHRElement,
    html: HTMLHtmlElement,
    i: HTMLElement,
    iframe: HTMLIFrameElement,
    image: SVGImageElement,
    img: HTMLImageElement,
    input: HTMLInputElement,
    ins: HTMLModElement,
    kbd: HTMLElement,
    label: HTMLLabelElement,
    legend: HTMLLegendElement,
    li: HTMLLIElement,
    line: SVGLineElement,
    linearGradient: SVGLinearGradientElement,
    link: HTMLLinkElement,
    map: HTMLMapElement,
    mark: HTMLElement,
    marker: SVGMarkerElement,
    marquee: HTMLMarqueeElement,
    mask: SVGMaskElement,
    menu: HTMLMenuElement,
    meta: HTMLMetaElement,
    metadata: SVGMetadataElement,
    meter: HTMLMeterElement,
    nav: HTMLElement,
    noscript: HTMLElement,
    `object`: HTMLObjectElement,
    ol: HTMLOListElement,
    optgroup: HTMLOptGroupElement,
    option: HTMLOptionElement,
    output: HTMLOutputElement,
    p: HTMLParagraphElement,
    param: HTMLParamElement,
    path: SVGPathElement,
    pattern: SVGPatternElement,
    picture: HTMLPictureElement,
    polygon: SVGPolygonElement,
    polyline: SVGPolylineElement,
    pre: HTMLPreElement,
    progress: HTMLProgressElement,
    q: HTMLQuoteElement,
    radialGradient: SVGRadialGradientElement,
    rect: SVGRectElement,
    rt: HTMLElement,
    ruby: HTMLElement,
    s: HTMLElement,
    samp: HTMLElement,
    script: HTMLScriptElement,
    section: HTMLElement,
    select: HTMLSelectElement,
    slot: HTMLSlotElement,
    small: HTMLElement,
    source: HTMLSourceElement,
    span: HTMLSpanElement,
    stop: SVGStopElement,
    strong: HTMLElement,
    style: HTMLStyleElement,
    sub: HTMLElement,
    sup: HTMLElement,
    svg: SVGSVGElement,
    switch: SVGSwitchElement,
    symbol: SVGSymbolElement,
    table: HTMLTableElement,
    tbody: HTMLTableSectionElement,
    td: HTMLTableDataCellElement,
    template: HTMLTemplateElement,
    text: SVGTextElement,
    textPath: SVGTextPathElement,
    textarea: HTMLTextAreaElement,
    tfoot: HTMLTableSectionElement,
    th: HTMLTableHeaderCellElement,
    thead: HTMLTableSectionElement,
    time: HTMLTimeElement,
    title: HTMLTitleElement,
    tr: HTMLTableRowElement,
    track: HTMLTrackElement,
    tspan: SVGTSpanElement,
    u: HTMLElement,
    ul: HTMLUListElement,
    use: SVGUseElement,
    `var`: HTMLElement,
    video: HTMLVideoElement,
    view: SVGViewElement,
    wbr: HTMLElement
  ): ElementTagNameMap = {
    val __obj = js.Dynamic.literal(a = a, abbr = abbr, address = address, applet = applet, area = area, article = article, aside = aside, audio = audio, b = b, base = base, basefont = basefont, bdo = bdo, blockquote = blockquote, body = body, br = br, button = button, canvas = canvas, caption = caption, circle = circle, cite = cite, clipPath = clipPath, code = code, col = col, colgroup = colgroup, data = data, datalist = datalist, dd = dd, defs = defs, del = del, desc = desc, details = details, dfn = dfn, dialog = dialog, dir = dir, div = div, dl = dl, dt = dt, ellipse = ellipse, em = em, embed = embed, feBlend = feBlend, feColorMatrix = feColorMatrix, feComponentTransfer = feComponentTransfer, feComposite = feComposite, feConvolveMatrix = feConvolveMatrix, feDiffuseLighting = feDiffuseLighting, feDisplacementMap = feDisplacementMap, feDistantLight = feDistantLight, feFlood = feFlood, feFuncA = feFuncA, feFuncB = feFuncB, feFuncG = feFuncG, feFuncR = feFuncR, feGaussianBlur = feGaussianBlur, feImage = feImage, feMerge = feMerge, feMergeNode = feMergeNode, feMorphology = feMorphology, feOffset = feOffset, fePointLight = fePointLight, feSpecularLighting = feSpecularLighting, feSpotLight = feSpotLight, feTile = feTile, feTurbulence = feTurbulence, fieldset = fieldset, figcaption = figcaption, figure = figure, filter = filter, font = font, footer = footer, foreignObject = foreignObject, form = form, frame = frame, frameset = frameset, g = g, h1 = h1, h2 = h2, h3 = h3, h4 = h4, h5 = h5, h6 = h6, head = head, header = header, hgroup = hgroup, hr = hr, html = html, i = i, iframe = iframe, image = image, img = img, input = input, ins = ins, kbd = kbd, label = label, legend = legend, li = li, line = line, linearGradient = linearGradient, link = link, map = map, mark = mark, marker = marker, marquee = marquee, mask = mask, menu = menu, meta = meta, metadata = metadata, meter = meter, nav = nav, noscript = noscript, ol = ol, optgroup = optgroup, option = option, output = output, p = p, param = param, path = path, pattern = pattern, picture = picture, polygon = polygon, polyline = polyline, pre = pre, progress = progress, q = q, radialGradient = radialGradient, rect = rect, rt = rt, ruby = ruby, s = s, samp = samp, script = script, section = section, select = select, slot = slot, small = small, source = source, span = span, stop = stop, strong = strong, style = style, sub = sub, sup = sup, svg = svg, switch = switch, symbol = symbol, table = table, tbody = tbody, td = td, template = template, text = text, textPath = textPath, textarea = textarea, tfoot = tfoot, th = th, thead = thead, time = time, title = title, tr = tr, track = track, tspan = tspan, u = u, ul = ul, use = use, video = video, view = view, wbr = wbr)
    __obj.updateDynamic("object")(`object`)
    __obj.updateDynamic("var")(`var`)
    __obj.asInstanceOf[ElementTagNameMap]
  }
}

