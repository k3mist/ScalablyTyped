package typings
package ckeditorLib.CKEDITORNs.editorNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait eventObject extends js.Object {
  var activeEnterModeChange: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var activeFilterChange: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var afterCommandExec: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var afterInsertHtml: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var afterPaste: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var afterPasteFromWord: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var afterSetData: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var afterUndoImage: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var ariaEditorHelpLabel: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var ariaWidget: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var autogrow: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var beforeCommandExec: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var beforeDestroy: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var beforeGetData: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var beforeModeUnload: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var beforeSetMode: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var beforeUndoImage: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var blur: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var change: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var configLoaded: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var contentDirChanged: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var contentDom: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var contentDomInvalidated: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var contentDomUnload: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var customConfigLoaded: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dataFiltered: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dataReady: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var destroy: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dialogHide: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dialogShow: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dirChanged: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var doubleclick: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dragend: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var dragstart: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var drop: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var elementsPathUpdate: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var fileUploadRequest: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var fileUploadResponse: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var floatingSpaceLayout: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var focus: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var getData: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var getSnapshot: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var insertElement: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var insertHtml: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var insertText: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var instanceReady: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var key: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var langLoaded: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var loadSnapshot: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var loaded: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var lockSnapshot: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var maximize: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var menuShow: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var mode: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var notificationHide: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var notificationShow: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var notificationUpdate: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var paste: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var pasteFromWord: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var pluginsLoaded: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var readOnly: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var removeFormatCleanup: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var required: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var resize: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var save: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var saveSnapshot: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var selectionChange: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var setData: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var stylesSet: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var template: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var toDataFormat: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var toHtml: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var unlockSnapshot: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var updateSnapshot: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
  var widgetDefinition: js.UndefOr[js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit]] = js.undefined
}

object eventObject {
  @scala.inline
  def apply(
    activeEnterModeChange: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    activeFilterChange: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    afterCommandExec: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    afterInsertHtml: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    afterPaste: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    afterPasteFromWord: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    afterSetData: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    afterUndoImage: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    ariaEditorHelpLabel: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    ariaWidget: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    autogrow: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    beforeCommandExec: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    beforeDestroy: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    beforeGetData: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    beforeModeUnload: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    beforeSetMode: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    beforeUndoImage: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    blur: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    change: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    configLoaded: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    contentDirChanged: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    contentDom: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    contentDomInvalidated: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    contentDomUnload: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    customConfigLoaded: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dataFiltered: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dataReady: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    destroy: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dialogHide: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dialogShow: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dirChanged: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    doubleclick: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dragend: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    dragstart: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    drop: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    elementsPathUpdate: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    fileUploadRequest: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    fileUploadResponse: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    floatingSpaceLayout: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    focus: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    getData: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    getSnapshot: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    insertElement: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    insertHtml: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    insertText: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    instanceReady: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    key: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    langLoaded: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    loadSnapshot: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    loaded: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    lockSnapshot: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    maximize: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    menuShow: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    mode: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    notificationHide: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    notificationShow: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    notificationUpdate: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    paste: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    pasteFromWord: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    pluginsLoaded: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    readOnly: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    removeFormatCleanup: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    required: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    resize: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    save: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    saveSnapshot: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    selectionChange: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    setData: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    stylesSet: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    template: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    toDataFormat: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    toHtml: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    unlockSnapshot: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    updateSnapshot: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null,
    widgetDefinition: js.Function1[/* evt */ ckeditorLib.CKEDITORNs.eventInfo, scala.Unit] = null
  ): eventObject = {
    val __obj = js.Dynamic.literal()
    if (activeEnterModeChange != null) __obj.updateDynamic("activeEnterModeChange")(activeEnterModeChange)
    if (activeFilterChange != null) __obj.updateDynamic("activeFilterChange")(activeFilterChange)
    if (afterCommandExec != null) __obj.updateDynamic("afterCommandExec")(afterCommandExec)
    if (afterInsertHtml != null) __obj.updateDynamic("afterInsertHtml")(afterInsertHtml)
    if (afterPaste != null) __obj.updateDynamic("afterPaste")(afterPaste)
    if (afterPasteFromWord != null) __obj.updateDynamic("afterPasteFromWord")(afterPasteFromWord)
    if (afterSetData != null) __obj.updateDynamic("afterSetData")(afterSetData)
    if (afterUndoImage != null) __obj.updateDynamic("afterUndoImage")(afterUndoImage)
    if (ariaEditorHelpLabel != null) __obj.updateDynamic("ariaEditorHelpLabel")(ariaEditorHelpLabel)
    if (ariaWidget != null) __obj.updateDynamic("ariaWidget")(ariaWidget)
    if (autogrow != null) __obj.updateDynamic("autogrow")(autogrow)
    if (beforeCommandExec != null) __obj.updateDynamic("beforeCommandExec")(beforeCommandExec)
    if (beforeDestroy != null) __obj.updateDynamic("beforeDestroy")(beforeDestroy)
    if (beforeGetData != null) __obj.updateDynamic("beforeGetData")(beforeGetData)
    if (beforeModeUnload != null) __obj.updateDynamic("beforeModeUnload")(beforeModeUnload)
    if (beforeSetMode != null) __obj.updateDynamic("beforeSetMode")(beforeSetMode)
    if (beforeUndoImage != null) __obj.updateDynamic("beforeUndoImage")(beforeUndoImage)
    if (blur != null) __obj.updateDynamic("blur")(blur)
    if (change != null) __obj.updateDynamic("change")(change)
    if (configLoaded != null) __obj.updateDynamic("configLoaded")(configLoaded)
    if (contentDirChanged != null) __obj.updateDynamic("contentDirChanged")(contentDirChanged)
    if (contentDom != null) __obj.updateDynamic("contentDom")(contentDom)
    if (contentDomInvalidated != null) __obj.updateDynamic("contentDomInvalidated")(contentDomInvalidated)
    if (contentDomUnload != null) __obj.updateDynamic("contentDomUnload")(contentDomUnload)
    if (customConfigLoaded != null) __obj.updateDynamic("customConfigLoaded")(customConfigLoaded)
    if (dataFiltered != null) __obj.updateDynamic("dataFiltered")(dataFiltered)
    if (dataReady != null) __obj.updateDynamic("dataReady")(dataReady)
    if (destroy != null) __obj.updateDynamic("destroy")(destroy)
    if (dialogHide != null) __obj.updateDynamic("dialogHide")(dialogHide)
    if (dialogShow != null) __obj.updateDynamic("dialogShow")(dialogShow)
    if (dirChanged != null) __obj.updateDynamic("dirChanged")(dirChanged)
    if (doubleclick != null) __obj.updateDynamic("doubleclick")(doubleclick)
    if (dragend != null) __obj.updateDynamic("dragend")(dragend)
    if (dragstart != null) __obj.updateDynamic("dragstart")(dragstart)
    if (drop != null) __obj.updateDynamic("drop")(drop)
    if (elementsPathUpdate != null) __obj.updateDynamic("elementsPathUpdate")(elementsPathUpdate)
    if (fileUploadRequest != null) __obj.updateDynamic("fileUploadRequest")(fileUploadRequest)
    if (fileUploadResponse != null) __obj.updateDynamic("fileUploadResponse")(fileUploadResponse)
    if (floatingSpaceLayout != null) __obj.updateDynamic("floatingSpaceLayout")(floatingSpaceLayout)
    if (focus != null) __obj.updateDynamic("focus")(focus)
    if (getData != null) __obj.updateDynamic("getData")(getData)
    if (getSnapshot != null) __obj.updateDynamic("getSnapshot")(getSnapshot)
    if (insertElement != null) __obj.updateDynamic("insertElement")(insertElement)
    if (insertHtml != null) __obj.updateDynamic("insertHtml")(insertHtml)
    if (insertText != null) __obj.updateDynamic("insertText")(insertText)
    if (instanceReady != null) __obj.updateDynamic("instanceReady")(instanceReady)
    if (key != null) __obj.updateDynamic("key")(key)
    if (langLoaded != null) __obj.updateDynamic("langLoaded")(langLoaded)
    if (loadSnapshot != null) __obj.updateDynamic("loadSnapshot")(loadSnapshot)
    if (loaded != null) __obj.updateDynamic("loaded")(loaded)
    if (lockSnapshot != null) __obj.updateDynamic("lockSnapshot")(lockSnapshot)
    if (maximize != null) __obj.updateDynamic("maximize")(maximize)
    if (menuShow != null) __obj.updateDynamic("menuShow")(menuShow)
    if (mode != null) __obj.updateDynamic("mode")(mode)
    if (notificationHide != null) __obj.updateDynamic("notificationHide")(notificationHide)
    if (notificationShow != null) __obj.updateDynamic("notificationShow")(notificationShow)
    if (notificationUpdate != null) __obj.updateDynamic("notificationUpdate")(notificationUpdate)
    if (paste != null) __obj.updateDynamic("paste")(paste)
    if (pasteFromWord != null) __obj.updateDynamic("pasteFromWord")(pasteFromWord)
    if (pluginsLoaded != null) __obj.updateDynamic("pluginsLoaded")(pluginsLoaded)
    if (readOnly != null) __obj.updateDynamic("readOnly")(readOnly)
    if (removeFormatCleanup != null) __obj.updateDynamic("removeFormatCleanup")(removeFormatCleanup)
    if (required != null) __obj.updateDynamic("required")(required)
    if (resize != null) __obj.updateDynamic("resize")(resize)
    if (save != null) __obj.updateDynamic("save")(save)
    if (saveSnapshot != null) __obj.updateDynamic("saveSnapshot")(saveSnapshot)
    if (selectionChange != null) __obj.updateDynamic("selectionChange")(selectionChange)
    if (setData != null) __obj.updateDynamic("setData")(setData)
    if (stylesSet != null) __obj.updateDynamic("stylesSet")(stylesSet)
    if (template != null) __obj.updateDynamic("template")(template)
    if (toDataFormat != null) __obj.updateDynamic("toDataFormat")(toDataFormat)
    if (toHtml != null) __obj.updateDynamic("toHtml")(toHtml)
    if (unlockSnapshot != null) __obj.updateDynamic("unlockSnapshot")(unlockSnapshot)
    if (updateSnapshot != null) __obj.updateDynamic("updateSnapshot")(updateSnapshot)
    if (widgetDefinition != null) __obj.updateDynamic("widgetDefinition")(widgetDefinition)
    __obj.asInstanceOf[eventObject]
  }
}

