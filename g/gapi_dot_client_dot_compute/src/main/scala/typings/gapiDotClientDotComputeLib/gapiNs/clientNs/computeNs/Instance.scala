package typings
package gapiDotClientDotComputeLib.gapiNs.clientNs.computeNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Instance extends js.Object {
  /**
    * Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to
    * forward routes. For more information, see Enabling IP Forwarding.
    */
  var canIpForward: js.UndefOr[scala.Boolean] = js.undefined
  /** [Output Only] The CPU platform used by this instance. */
  var cpuPlatform: js.UndefOr[java.lang.String] = js.undefined
  /** [Output Only] Creation timestamp in RFC3339 text format. */
  var creationTimestamp: js.UndefOr[java.lang.String] = js.undefined
  /** An optional description of this resource. Provide this property when you create the resource. */
  var description: js.UndefOr[java.lang.String] = js.undefined
  /** Array of disks associated with this instance. Persistent disks must be created before you can assign them. */
  var disks: js.UndefOr[js.Array[AttachedDisk]] = js.undefined
  /** List of the type and count of accelerator cards attached to the instance. */
  var guestAccelerators: js.UndefOr[js.Array[AcceleratorConfig]] = js.undefined
  /** [Output Only] The unique identifier for the resource. This identifier is defined by the server. */
  var id: js.UndefOr[java.lang.String] = js.undefined
  /** [Output Only] Type of the resource. Always compute#instance for instances. */
  var kind: js.UndefOr[java.lang.String] = js.undefined
  /**
    * A fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially
    * generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in
    * order to update or change metadata.
    *
    * To see the latest fingerprint, make get() request to the instance.
    */
  var labelFingerprint: js.UndefOr[java.lang.String] = js.undefined
  /** Labels to apply to this instance. These can be later modified by the setLabels method. */
  var labels: js.UndefOr[stdLib.Record[java.lang.String, java.lang.String]] = js.undefined
  /**
    * Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the
    * client when the instance is created. For example, the following is a valid partial url to a predefined machine type:
    *
    * zones/us-central1-f/machineTypes/n1-standard-1
    *
    * To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24,
    * etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120
    * MB):
    *
    * zones/zone/machineTypes/custom-CPUS-MEMORY
    *
    * For example: zones/us-central1-f/machineTypes/custom-4-5120
    *
    * For a full list of restrictions, read the Specifications for custom machine types.
    */
  var machineType: js.UndefOr[java.lang.String] = js.undefined
  /** The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys. */
  var metadata: js.UndefOr[Metadata] = js.undefined
  /**
    * Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel
    * Haswell" or minCpuPlatform: "Intel Sandy Bridge".
    */
  var minCpuPlatform: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with
    * RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]&#42;[a-z0-9])? which means the first
    * character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot
    * be a dash.
    */
  var name: js.UndefOr[java.lang.String] = js.undefined
  /**
    * An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as
    * connecting to the internet. Multiple interfaces are supported per instance.
    */
  var networkInterfaces: js.UndefOr[js.Array[NetworkInterface]] = js.undefined
  /** Sets the scheduling options for this instance. */
  var scheduling: js.UndefOr[Scheduling] = js.undefined
  /** [Output Only] Server-defined URL for this resource. */
  var selfLink: js.UndefOr[java.lang.String] = js.undefined
  /**
    * A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.
    *
    * Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See
    * Service Accounts for more information.
    */
  var serviceAccounts: js.UndefOr[js.Array[ServiceAccount]] = js.undefined
  /** [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity. */
  var startRestricted: js.UndefOr[scala.Boolean] = js.undefined
  /**
    * [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED, SUSPENDING, SUSPENDED, and
    * TERMINATED.
    */
  var status: js.UndefOr[java.lang.String] = js.undefined
  /** [Output Only] An optional, human-readable explanation of the status. */
  var statusMessage: js.UndefOr[java.lang.String] = js.undefined
  /**
    * A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client
    * during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
    */
  var tags: js.UndefOr[Tags] = js.undefined
  /** [Output Only] URL of the zone where the instance resides. */
  var zone: js.UndefOr[java.lang.String] = js.undefined
}

object Instance {
  @scala.inline
  def apply(
    canIpForward: js.UndefOr[scala.Boolean] = js.undefined,
    cpuPlatform: java.lang.String = null,
    creationTimestamp: java.lang.String = null,
    description: java.lang.String = null,
    disks: js.Array[AttachedDisk] = null,
    guestAccelerators: js.Array[AcceleratorConfig] = null,
    id: java.lang.String = null,
    kind: java.lang.String = null,
    labelFingerprint: java.lang.String = null,
    labels: stdLib.Record[java.lang.String, java.lang.String] = null,
    machineType: java.lang.String = null,
    metadata: Metadata = null,
    minCpuPlatform: java.lang.String = null,
    name: java.lang.String = null,
    networkInterfaces: js.Array[NetworkInterface] = null,
    scheduling: Scheduling = null,
    selfLink: java.lang.String = null,
    serviceAccounts: js.Array[ServiceAccount] = null,
    startRestricted: js.UndefOr[scala.Boolean] = js.undefined,
    status: java.lang.String = null,
    statusMessage: java.lang.String = null,
    tags: Tags = null,
    zone: java.lang.String = null
  ): Instance = {
    val __obj = js.Dynamic.literal()
    if (!js.isUndefined(canIpForward)) __obj.updateDynamic("canIpForward")(canIpForward)
    if (cpuPlatform != null) __obj.updateDynamic("cpuPlatform")(cpuPlatform)
    if (creationTimestamp != null) __obj.updateDynamic("creationTimestamp")(creationTimestamp)
    if (description != null) __obj.updateDynamic("description")(description)
    if (disks != null) __obj.updateDynamic("disks")(disks)
    if (guestAccelerators != null) __obj.updateDynamic("guestAccelerators")(guestAccelerators)
    if (id != null) __obj.updateDynamic("id")(id)
    if (kind != null) __obj.updateDynamic("kind")(kind)
    if (labelFingerprint != null) __obj.updateDynamic("labelFingerprint")(labelFingerprint)
    if (labels != null) __obj.updateDynamic("labels")(labels)
    if (machineType != null) __obj.updateDynamic("machineType")(machineType)
    if (metadata != null) __obj.updateDynamic("metadata")(metadata)
    if (minCpuPlatform != null) __obj.updateDynamic("minCpuPlatform")(minCpuPlatform)
    if (name != null) __obj.updateDynamic("name")(name)
    if (networkInterfaces != null) __obj.updateDynamic("networkInterfaces")(networkInterfaces)
    if (scheduling != null) __obj.updateDynamic("scheduling")(scheduling)
    if (selfLink != null) __obj.updateDynamic("selfLink")(selfLink)
    if (serviceAccounts != null) __obj.updateDynamic("serviceAccounts")(serviceAccounts)
    if (!js.isUndefined(startRestricted)) __obj.updateDynamic("startRestricted")(startRestricted)
    if (status != null) __obj.updateDynamic("status")(status)
    if (statusMessage != null) __obj.updateDynamic("statusMessage")(statusMessage)
    if (tags != null) __obj.updateDynamic("tags")(tags)
    if (zone != null) __obj.updateDynamic("zone")(zone)
    __obj.asInstanceOf[Instance]
  }
}

