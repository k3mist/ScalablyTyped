package typings
package gapiDotClientDotAndroidmanagementLib.gapiNs.clientNs.androidmanagementNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait WebToken extends js.Object {
  /** The name of the web token, which is generated by the server during creation, in the form enterprises/{enterpriseId}/webTokens/{webTokenId}. */
  var name: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The URL of the parent frame hosting the iframe with the embedded UI. To prevent XSS, the iframe may not be hosted at other URLs. The URL must use the
    * https scheme.
    */
  var parentFrameUrl: js.UndefOr[java.lang.String] = js.undefined
  /** Permissions the admin may exercise in the embedded UI. The admin must have all of these permissions in order to view the UI. */
  var permissions: js.UndefOr[js.Array[java.lang.String]] = js.undefined
  /** The token value which is used in the hosting page to generate the iframe with the embedded UI. This is a read-only field generated by the server. */
  var value: js.UndefOr[java.lang.String] = js.undefined
}

object WebToken {
  @scala.inline
  def apply(
    name: java.lang.String = null,
    parentFrameUrl: java.lang.String = null,
    permissions: js.Array[java.lang.String] = null,
    value: java.lang.String = null
  ): WebToken = {
    val __obj = js.Dynamic.literal()
    if (name != null) __obj.updateDynamic("name")(name)
    if (parentFrameUrl != null) __obj.updateDynamic("parentFrameUrl")(parentFrameUrl)
    if (permissions != null) __obj.updateDynamic("permissions")(permissions)
    if (value != null) __obj.updateDynamic("value")(value)
    __obj.asInstanceOf[WebToken]
  }
}

