package typings
package gapiDotClientDotResellerLib.gapiNs.clientNs.resellerNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Customer extends js.Object {
  /**
    * Like the "Customer email" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as
    * service outage or a security issue. This property is required when creating a new customer and should not use the same domain as customerDomain.
    */
  var alternateEmail: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The customer's primary domain name string. customerDomain is required when creating a new customer. Do not include the www prefix in the domain when
    * adding a customer.
    */
  var customerDomain: js.UndefOr[java.lang.String] = js.undefined
  /** Whether the customer's primary domain has been verified. */
  var customerDomainVerified: js.UndefOr[scala.Boolean] = js.undefined
  /**
    * This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary
    * domain or the unique identifier generated by Google.
    */
  var customerId: js.UndefOr[java.lang.String] = js.undefined
  /** Identifies the resource as a customer. Value: reseller#customer */
  var kind: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Customer contact phone number. This can be continuous numbers, with spaces, etc. But it must be a real phone number and not, for example, "123". See
    * phone  local format conventions.
    */
  var phoneNumber: js.UndefOr[java.lang.String] = js.undefined
  /** A customer's address information. Each field has a limit of 255 charcters. */
  var postalAddress: js.UndefOr[Address] = js.undefined
  /**
    * URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the
    * customer to complete a task in the Admin console.
    */
  var resourceUiUrl: js.UndefOr[java.lang.String] = js.undefined
}

object Customer {
  @scala.inline
  def apply(
    alternateEmail: java.lang.String = null,
    customerDomain: java.lang.String = null,
    customerDomainVerified: js.UndefOr[scala.Boolean] = js.undefined,
    customerId: java.lang.String = null,
    kind: java.lang.String = null,
    phoneNumber: java.lang.String = null,
    postalAddress: Address = null,
    resourceUiUrl: java.lang.String = null
  ): Customer = {
    val __obj = js.Dynamic.literal()
    if (alternateEmail != null) __obj.updateDynamic("alternateEmail")(alternateEmail)
    if (customerDomain != null) __obj.updateDynamic("customerDomain")(customerDomain)
    if (!js.isUndefined(customerDomainVerified)) __obj.updateDynamic("customerDomainVerified")(customerDomainVerified)
    if (customerId != null) __obj.updateDynamic("customerId")(customerId)
    if (kind != null) __obj.updateDynamic("kind")(kind)
    if (phoneNumber != null) __obj.updateDynamic("phoneNumber")(phoneNumber)
    if (postalAddress != null) __obj.updateDynamic("postalAddress")(postalAddress)
    if (resourceUiUrl != null) __obj.updateDynamic("resourceUiUrl")(resourceUiUrl)
    __obj.asInstanceOf[Customer]
  }
}

