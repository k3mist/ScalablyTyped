package typings
package gapiDotClientDotAppengineLib.gapiNs.clientNs.appengineNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait AuthorizedCertificate extends js.Object {
  /** The SSL certificate serving the AuthorizedCertificate resource. This must be obtained independently from a certificate authority. */
  var certificateRawData: js.UndefOr[CertificateRawData] = js.undefined
  /** The user-specified display name of the certificate. This is not guaranteed to be unique. Example: My Certificate. */
  var displayName: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Aggregate count of the domain mappings with this certificate mapped. This count includes domain mappings on applications for which the user does not
    * have VIEWER permissions.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly
    */
  var domainMappingsCount: js.UndefOr[scala.Double] = js.undefined
  /** Topmost applicable domains of this certificate. This certificate applies to these domains and their subdomains. Example: example.com.@OutputOnly */
  var domainNames: js.UndefOr[js.Array[java.lang.String]] = js.undefined
  /**
    * The time when this certificate expires. To update the renewal time on this certificate, upload an SSL certificate with a different expiration time
    * using AuthorizedCertificates.UpdateAuthorizedCertificate.@OutputOnly
    */
  var expireTime: js.UndefOr[java.lang.String] = js.undefined
  /** Relative name of the certificate. This is a unique value autogenerated on AuthorizedCertificate resource creation. Example: 12345.@OutputOnly */
  var id: js.UndefOr[java.lang.String] = js.undefined
  /** Full path to the AuthorizedCertificate resource in the API. Example: apps/myapp/authorizedCertificates/12345.@OutputOnly */
  var name: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The full paths to user visible Domain Mapping resources that have this certificate mapped. Example: apps/myapp/domainMappings/example.com.This may not
    * represent the full list of mapped domain mappings if the user does not have VIEWER permissions on all of the applications that have this certificate
    * mapped. See domain_mappings_count for a complete count.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE
    * option.@OutputOnly
    */
  var visibleDomainMappings: js.UndefOr[js.Array[java.lang.String]] = js.undefined
}

object AuthorizedCertificate {
  @scala.inline
  def apply(
    certificateRawData: CertificateRawData = null,
    displayName: java.lang.String = null,
    domainMappingsCount: scala.Int | scala.Double = null,
    domainNames: js.Array[java.lang.String] = null,
    expireTime: java.lang.String = null,
    id: java.lang.String = null,
    name: java.lang.String = null,
    visibleDomainMappings: js.Array[java.lang.String] = null
  ): AuthorizedCertificate = {
    val __obj = js.Dynamic.literal()
    if (certificateRawData != null) __obj.updateDynamic("certificateRawData")(certificateRawData)
    if (displayName != null) __obj.updateDynamic("displayName")(displayName)
    if (domainMappingsCount != null) __obj.updateDynamic("domainMappingsCount")(domainMappingsCount.asInstanceOf[js.Any])
    if (domainNames != null) __obj.updateDynamic("domainNames")(domainNames)
    if (expireTime != null) __obj.updateDynamic("expireTime")(expireTime)
    if (id != null) __obj.updateDynamic("id")(id)
    if (name != null) __obj.updateDynamic("name")(name)
    if (visibleDomainMappings != null) __obj.updateDynamic("visibleDomainMappings")(visibleDomainMappings)
    __obj.asInstanceOf[AuthorizedCertificate]
  }
}

