package typings
package gapiDotClientDotPlaymoviespartnerLib.gapiNs.clientNs.playmoviespartnerNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Avail extends js.Object {
  /**
    * Other identifier referring to the Edit, as defined by partner.
    * Example: "GOOGLER_2006"
    */
  var altId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * ID internally generated by Google to uniquely identify an Avail.
    * Not part of EMA Specs.
    */
  var availId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Communicating an exempt category as defined by FCC regulations.
    * It is not required for non-US Avails.
    * Example: "1"
    */
  var captionExemption: js.UndefOr[java.lang.String] = js.undefined
  /** Communicating if caption file will be delivered. */
  var captionIncluded: js.UndefOr[scala.Boolean] = js.undefined
  /**
    * Title Identifier. This should be the Title Level EIDR.
    * Example: "10.5240/1489-49A2-3956-4B2D-FE16-5".
    */
  var contentId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The name of the studio that owns the Edit referred in the Avail.
    * This is the equivalent of `studio_name` in other resources, but it follows
    * the EMA nomenclature.
    * Example: "Google Films".
    */
  var displayName: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Manifestation Identifier. This should be the Manifestation
    * Level EIDR.
    * Example: "10.2340/1489-49A2-3956-4B2D-FE16-7"
    */
  var encodeId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * End of term in YYYY-MM-DD format in the timezone of the country
    * of the Avail.
    * "Open" if no end date is available.
    * Example: "2019-02-17"
    */
  var end: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Other identifier referring to the episode, as defined by partner.
    * Only available on TV avails.
    * Example: "rs_googlers_s1_3".
    */
  var episodeAltId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The number assigned to the episode within a season.
    * Only available on TV Avails.
    * Example: "3".
    */
  var episodeNumber: js.UndefOr[java.lang.String] = js.undefined
  /**
    * OPTIONAL.TV Only. Title used by involved parties to refer to this episode.
    * Only available on TV Avails.
    * Example: "Coding at Google".
    */
  var episodeTitleInternalAlias: js.UndefOr[java.lang.String] = js.undefined
  /** Indicates the format profile covered by the transaction. */
  var formatProfile: js.UndefOr[java.lang.String] = js.undefined
  /** Type of transaction. */
  var licenseType: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Name of the post-production houses that manage the Avail.
    * Not part of EMA Specs.
    */
  var pphNames: js.UndefOr[js.Array[java.lang.String]] = js.undefined
  /**
    * Type of pricing that should be applied to this Avail
    * based on how the partner classify them.
    * Example: "Tier", "WSP", "SRP", or "Category".
    */
  var priceType: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Value to be applied to the pricing type.
    * Example: "4" or "2.99"
    */
  var priceValue: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Edit Identifier. This should be the Edit Level EIDR.
    * Example: "10.2340/1489-49A2-3956-4B2D-FE16-6"
    */
  var productId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Value representing the rating reason.
    * Rating reasons should be formatted as per
    * [EMA ratings spec](http://www.movielabs.com/md/ratings/)
    * and comma-separated for inclusion of multiple reasons.
    * Example: "L, S, V"
    */
  var ratingReason: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Rating system applied to the version of title within territory
    * of Avail.
    * Rating systems should be formatted as per
    * [EMA ratings spec](http://www.movielabs.com/md/ratings/)
    * Example: "MPAA"
    */
  var ratingSystem: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Value representing the rating.
    * Ratings should be formatted as per http://www.movielabs.com/md/ratings/
    * Example: "PG"
    */
  var ratingValue: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Release date of the Title in earliest released territory.
    * Typically it is just the year, but it is free-form as per EMA spec.
    * Examples: "1979", "Oct 2014"
    */
  var releaseDate: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Other identifier referring to the season, as defined by partner.
    * Only available on TV avails.
    * Example: "rs_googlers_s1".
    */
  var seasonAltId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * The number assigned to the season within a series.
    * Only available on TV Avails.
    * Example: "1".
    */
  var seasonNumber: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Title used by involved parties to refer to this season.
    * Only available on TV Avails.
    * Example: "Googlers, The".
    */
  var seasonTitleInternalAlias: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Other identifier referring to the series, as defined by partner.
    * Only available on TV avails.
    * Example: "rs_googlers".
    */
  var seriesAltId: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Title used by involved parties to refer to this series.
    * Only available on TV Avails.
    * Example: "Googlers, The".
    */
  var seriesTitleInternalAlias: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Start of term in YYYY-MM-DD format in the timezone of the
    * country of the Avail.
    * Example: "2013-05-14".
    */
  var start: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Spoken language of the intended audience.
    * Language shall be encoded in accordance with RFC 5646.
    * Example: "fr".
    */
  var storeLanguage: js.UndefOr[java.lang.String] = js.undefined
  /**
    * First date an Edit could be publically announced as becoming
    * available at a specific future date in territory of Avail.
    * &#42;Not&#42; the Avail start date or pre-order start date.
    * Format is YYYY-MM-DD.
    * Only available for pre-orders.
    * Example: "2012-12-10"
    */
  var suppressionLiftDate: js.UndefOr[java.lang.String] = js.undefined
  /**
    * ISO 3166-1 alpha-2 country code for the country or territory
    * of this Avail.
    * For Avails, we use Territory in lieu of Country to comply with
    * EMA specifications.
    * But please note that Territory and Country identify the same thing.
    * Example: "US".
    */
  var territory: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Title used by involved parties to refer to this content.
    * Example: "Googlers, The".
    * Only available on Movie Avails.
    */
  var titleInternalAlias: js.UndefOr[java.lang.String] = js.undefined
  /**
    * Google-generated ID identifying the video linked to this Avail, once
    * delivered.
    * Not part of EMA Specs.
    * Example: 'gtry456_xc'
    */
  var videoId: js.UndefOr[java.lang.String] = js.undefined
  /** Work type as enumerated in EMA. */
  var workType: js.UndefOr[java.lang.String] = js.undefined
}

object Avail {
  @scala.inline
  def apply(
    altId: java.lang.String = null,
    availId: java.lang.String = null,
    captionExemption: java.lang.String = null,
    captionIncluded: js.UndefOr[scala.Boolean] = js.undefined,
    contentId: java.lang.String = null,
    displayName: java.lang.String = null,
    encodeId: java.lang.String = null,
    end: java.lang.String = null,
    episodeAltId: java.lang.String = null,
    episodeNumber: java.lang.String = null,
    episodeTitleInternalAlias: java.lang.String = null,
    formatProfile: java.lang.String = null,
    licenseType: java.lang.String = null,
    pphNames: js.Array[java.lang.String] = null,
    priceType: java.lang.String = null,
    priceValue: java.lang.String = null,
    productId: java.lang.String = null,
    ratingReason: java.lang.String = null,
    ratingSystem: java.lang.String = null,
    ratingValue: java.lang.String = null,
    releaseDate: java.lang.String = null,
    seasonAltId: java.lang.String = null,
    seasonNumber: java.lang.String = null,
    seasonTitleInternalAlias: java.lang.String = null,
    seriesAltId: java.lang.String = null,
    seriesTitleInternalAlias: java.lang.String = null,
    start: java.lang.String = null,
    storeLanguage: java.lang.String = null,
    suppressionLiftDate: java.lang.String = null,
    territory: java.lang.String = null,
    titleInternalAlias: java.lang.String = null,
    videoId: java.lang.String = null,
    workType: java.lang.String = null
  ): Avail = {
    val __obj = js.Dynamic.literal()
    if (altId != null) __obj.updateDynamic("altId")(altId)
    if (availId != null) __obj.updateDynamic("availId")(availId)
    if (captionExemption != null) __obj.updateDynamic("captionExemption")(captionExemption)
    if (!js.isUndefined(captionIncluded)) __obj.updateDynamic("captionIncluded")(captionIncluded)
    if (contentId != null) __obj.updateDynamic("contentId")(contentId)
    if (displayName != null) __obj.updateDynamic("displayName")(displayName)
    if (encodeId != null) __obj.updateDynamic("encodeId")(encodeId)
    if (end != null) __obj.updateDynamic("end")(end)
    if (episodeAltId != null) __obj.updateDynamic("episodeAltId")(episodeAltId)
    if (episodeNumber != null) __obj.updateDynamic("episodeNumber")(episodeNumber)
    if (episodeTitleInternalAlias != null) __obj.updateDynamic("episodeTitleInternalAlias")(episodeTitleInternalAlias)
    if (formatProfile != null) __obj.updateDynamic("formatProfile")(formatProfile)
    if (licenseType != null) __obj.updateDynamic("licenseType")(licenseType)
    if (pphNames != null) __obj.updateDynamic("pphNames")(pphNames)
    if (priceType != null) __obj.updateDynamic("priceType")(priceType)
    if (priceValue != null) __obj.updateDynamic("priceValue")(priceValue)
    if (productId != null) __obj.updateDynamic("productId")(productId)
    if (ratingReason != null) __obj.updateDynamic("ratingReason")(ratingReason)
    if (ratingSystem != null) __obj.updateDynamic("ratingSystem")(ratingSystem)
    if (ratingValue != null) __obj.updateDynamic("ratingValue")(ratingValue)
    if (releaseDate != null) __obj.updateDynamic("releaseDate")(releaseDate)
    if (seasonAltId != null) __obj.updateDynamic("seasonAltId")(seasonAltId)
    if (seasonNumber != null) __obj.updateDynamic("seasonNumber")(seasonNumber)
    if (seasonTitleInternalAlias != null) __obj.updateDynamic("seasonTitleInternalAlias")(seasonTitleInternalAlias)
    if (seriesAltId != null) __obj.updateDynamic("seriesAltId")(seriesAltId)
    if (seriesTitleInternalAlias != null) __obj.updateDynamic("seriesTitleInternalAlias")(seriesTitleInternalAlias)
    if (start != null) __obj.updateDynamic("start")(start)
    if (storeLanguage != null) __obj.updateDynamic("storeLanguage")(storeLanguage)
    if (suppressionLiftDate != null) __obj.updateDynamic("suppressionLiftDate")(suppressionLiftDate)
    if (territory != null) __obj.updateDynamic("territory")(territory)
    if (titleInternalAlias != null) __obj.updateDynamic("titleInternalAlias")(titleInternalAlias)
    if (videoId != null) __obj.updateDynamic("videoId")(videoId)
    if (workType != null) __obj.updateDynamic("workType")(workType)
    __obj.asInstanceOf[Avail]
  }
}

