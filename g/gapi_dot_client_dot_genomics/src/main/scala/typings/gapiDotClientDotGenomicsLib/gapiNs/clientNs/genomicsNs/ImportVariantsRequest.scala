package typings
package gapiDotClientDotGenomicsLib.gapiNs.clientNs.genomicsNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait ImportVariantsRequest extends js.Object {
  /**
    * The format of the variant data being imported. If unspecified, defaults to
    * to `VCF`.
    */
  var format: js.UndefOr[java.lang.String] = js.undefined
  /**
    * A mapping between info field keys and the InfoMergeOperations to
    * be performed on them. This is plumbed down to the MergeVariantRequests
    * generated by the resulting import job.
    */
  var infoMergeConfig: js.UndefOr[stdLib.Record[java.lang.String, java.lang.String]] = js.undefined
  /**
    * Convert reference names to the canonical representation.
    * hg19 haploytypes (those reference names containing "_hap")
    * are not modified in any way.
    * All other reference names are modified according to the following rules:
    * The reference name is capitalized.
    * The "chr" prefix is dropped for all autosomes and sex chromsomes.
    * For example "chr17" becomes "17" and "chrX" becomes "X".
    * All mitochondrial chromosomes ("chrM", "chrMT", etc) become "MT".
    */
  var normalizeReferenceNames: js.UndefOr[scala.Boolean] = js.undefined
  /**
    * A list of URIs referencing variant files in Google Cloud Storage. URIs can
    * include wildcards [as described
    * here](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
    * Note that recursive wildcards ('&#42;&#42;') are not supported.
    */
  var sourceUris: js.UndefOr[js.Array[java.lang.String]] = js.undefined
  /** Required. The variant set to which variant data should be imported. */
  var variantSetId: js.UndefOr[java.lang.String] = js.undefined
}

object ImportVariantsRequest {
  @scala.inline
  def apply(
    format: java.lang.String = null,
    infoMergeConfig: stdLib.Record[java.lang.String, java.lang.String] = null,
    normalizeReferenceNames: js.UndefOr[scala.Boolean] = js.undefined,
    sourceUris: js.Array[java.lang.String] = null,
    variantSetId: java.lang.String = null
  ): ImportVariantsRequest = {
    val __obj = js.Dynamic.literal()
    if (format != null) __obj.updateDynamic("format")(format)
    if (infoMergeConfig != null) __obj.updateDynamic("infoMergeConfig")(infoMergeConfig)
    if (!js.isUndefined(normalizeReferenceNames)) __obj.updateDynamic("normalizeReferenceNames")(normalizeReferenceNames)
    if (sourceUris != null) __obj.updateDynamic("sourceUris")(sourceUris)
    if (variantSetId != null) __obj.updateDynamic("variantSetId")(variantSetId)
    __obj.asInstanceOf[ImportVariantsRequest]
  }
}

