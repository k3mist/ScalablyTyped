package typings
package dynatableLib.JQueryDynatableNs

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Column extends js.Object {
  var hidden: scala.Boolean
  /**
    * Determined by the `data-dynatable-column` or using the `defaultColumnIdStyle`
    *
    * @example
    * // Using the `defaultColumnIdStyle` of `camelCase`
    * // `<th>Favorite Music</th>` would be translated into the id `favoriteMusic`
    */
  var id: java.lang.String
  var index: scala.Double
  var label: java.lang.String
  /** List of ids for sorting, generated by the plugin, can be tweaked by using `data-dynatable-sorts` */
  var sorts: js.Array[java.lang.String]
  /**
    * Detected internally by dynatable.
    * Possible values are:
    *
    * @enum('left', 'right', 'center', 'justify', 'initial', 'inherit')
    */
  var textAlign: java.lang.String
  /**
    * Function that interprets the cell html data in order to convert it into data
    *
    * @param cell A html node of the target cell
    * @param record A data object representing the current line of data
    * @return the html content for the current cell
    *
    * @example
    * function exampleAttributeReader(cell, record) {
    *     return $(cell).html();
    * };
    */
  def attributeReader(cell: stdLib.Element, record: js.Any): java.lang.String
  /**
    * Function that returns the cell data to be written inside the cell
    *
    * @param record A data object representing the current line of data
    * @return The data for the current cell
    *
    * @example
    * function exampleAttributeWriter(record) {
    *     return record[this.id];
    * };
    */
  def attributeWriter(record: js.Any): js.Any
}

object Column {
  @scala.inline
  def apply(
    attributeReader: js.Function2[stdLib.Element, js.Any, java.lang.String],
    attributeWriter: js.Function1[js.Any, js.Any],
    hidden: scala.Boolean,
    id: java.lang.String,
    index: scala.Double,
    label: java.lang.String,
    sorts: js.Array[java.lang.String],
    textAlign: java.lang.String
  ): Column = {
    val __obj = js.Dynamic.literal(attributeReader = attributeReader, attributeWriter = attributeWriter, hidden = hidden, id = id, index = index, label = label, sorts = sorts, textAlign = textAlign)
  
    __obj.asInstanceOf[Column]
  }
}

